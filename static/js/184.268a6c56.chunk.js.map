{"version":3,"file":"static/js/184.268a6c56.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/Header/Header.styled.jsx","components/Header/ThemeSelection/ThemeSelection.styled.jsx","components/Header/UserHeader/UserHeader.styled.jsx","components/UserInfo/UserInfo.styled.jsx","components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","components/UserInfo/UserInfo.jsx","components/Header/UserHeader/UserHeader.jsx","components/Header/ThemeSelection/ThemeSelection.jsx","components/Header/Header.jsx","components/Sidebar/BoardList/BoardList.styled.jsx","components/Sidebar/BoardListItem/BoardListItem.styled.jsx","components/Sidebar/BoardListItem/BoardListItem.jsx","redux/boards/boards-selectors.js","components/Sidebar/BoardList/BoardList.jsx","components/Sidebar/NeedHelp/NeedHelp.styled.jsx","components/Modal/NeedHelpModal/NeedHelpModal.styled.jsx","components/Modal/NeedHelpModal/NeedHelpModal.jsx","components/Sidebar/NeedHelp/NeedHelp.jsx","constants/index.js","assets/images/icons/icons-sprite.svg","components/Modal/BoardModal/BoardModal.styled.jsx","components/Modal/BoardModal/IconsList.jsx","assets/constants/backgroundList.js","components/Modal/BoardModal/BacksList.jsx","components/Modal/BoardModal/backgroundMap.jsx","components/Icon/Plus.jsx","components/Modal/BoardModal/BoardModal.jsx","helpers/validateInputMaxLength.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","components/HomePageText/HomePageText.styled.jsx","components/HomePageText/HomePageText.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","schemas/registerSchema.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  min-height: 100vh;\n  background: var(--welcomeBgColor);\n`;\n\nexport const FormWrap = styled.div`\n  padding: 24px;\n  width: calc(100% - 40px);\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  background-color: var(--bgColorAuth);\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    height: 363px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 424px;\n    height: 395px;\n    padding: 40px;\n  }\n`;\n\nexport const AuthList = styled.ul`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 26px;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  font-weight: 500;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ffffff;\n  }\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const FormUi = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  label {\n    position: relative;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 14px 18px;\n  background: transparent;\n  border: 1px solid var(--inputBorderFocus);\n  border-radius: 8px;\n  color: #ffffff;\n  opacity: 0.4;\n  transition: opacity 0.3s ease;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n background: var(--inputBgColor);\n font-weight: 400;\n font-size: 14px;\nletter-spacing: -0.02em;\n\n  &:focus {\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n  \n`;\n\nexport const PassInputWrap = styled.div`\n  position: relative;\n`;\n\nexport const HideBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate(-50%, 50%);\n  opacity: 0.4;\n  background-color: transparent;\n  cursor: pointer;\n  \n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 0;\n  font-weight: 500;\n  background: var(--inputBorderFocus);\n  border-radius: 8px;\n  color: var(--buttonColor);\n  transition: background 0.3s ease;\n\n  margin-top: 10px;\n\n  &:hover {\n    background: #9dc888;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ErrorPara = styled.span`\n  position: absolute;\n  left: 0;\n  bottom: -14px;\n  font-size: 10px;\n  color: #00de00;\n`;","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 60px;\n  padding: 18px 20px;\n  // width: 100vw;\n  background-color: var(--additional-bg-color);\n\n  @media screen and (min-width: 768px) {\n    height: 68px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    justify-content: flex-end;\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\nexport const MobMenuBtn = styled.button`\n  svg {\n    width: 24px;\n    height: 24px;\n    fill: var(--icon-color);\n    @media screen and (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const UserInfoDiv = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const ThemeDiv = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ThemeSubDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\nexport const DropdownMenu = styled.div`\n  position: absolute;\n  top: calc(100% + 8px);\n  transform: translateX(-25%);\n  display: flex;\n  width: 100px;\n  height: 107px;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  border: 1px solid var(--input-border-color);\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background: var(--input-bg-color);\n  gap: 4px;\n  z-index: 99;\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin-left: 18px;\n  }\n\n  ul li {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--additional-input-text-color);\n    cursor: pointer;\n    margin-bottom: 4px;\n  }\n\n  ul li:hover {\n    color: var(--additional-icon-color);\n  }\n`;\n\nexport const ThemeText = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color-op);\n`;\n\nexport const ThemeIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  padding-top: 2px;\n  stroke: var(--additional-text-color-op);\n  margin-left: 1px;\n  use {\n  }\n`;\n","import styled from 'styled-components';\n\nexport const UserDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 14px;\n  gap: 8px;\n`;\n\nexport const UserName = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color);\n`;\n\nexport const UserImg = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  cursor: pointer;\n  object-fit: cover;\n`;\n\nexport const UserIconImg = styled.img`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  object-fit: cover;\n`;\n","import styled from 'styled-components';\n\nexport const TitleInfo = styled.h3`\nfont-weight: 500;\nfont-size: 18px;\nletter-spacing: -0.02em;\ncolor: var(--icon-color);;\n`;\n\nexport const LabelWrap = styled.label`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 14px 18px;\n  background: transparent;\n  border: 1px solid var(--additional-btn-bg-color);\n  border-radius: 8px;\n  color: var(--icon-color);\n  opacity: 0.4;\n  transition: opacity 0.3s ease; \n font-weight: 400;\n font-size: 14px;\nletter-spacing: -0.02em;\n\n  &:focus {\n    border-color: var(--additional-btn-bg-color);\n    opacity: 1;\n  }\n  &:hover {\n    border: 1px solid var(--additional-btn-bg-color);\n    opacity: 1;\n  }\n  \n`;\nexport const FormUserInfo = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const AddPhoto = styled.input`\n  display: none;\n`;\n\nexport const AvatarEdit = styled.label`\n  cursor: pointer;\n  background-color: var(--primary-bg-color);\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  margin-bottom: 14px;\n  margin-top: 24px;\n  img {\n    border-radius: 8px;\n    border: 2px solid var(--primary-bg-color);\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 6px;\n  background-color: var(--accent-icon-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  translate: 100% -50%;\n`;\n\nexport const SubmitBtnInfo = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 0;\n  width: 100%;\n  font-weight: 500;\n  background: var( --additional-btn-bg-color);\n  border-radius: 8px;\n  color: var(--btn-text-color);\n  transition: background 0.3s ease;\n  margin-top: 10px;\n  &:hover {\n    background: var( --additional-btn-bg-hover-color);\n  }\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--primary-bg-color);\n\n  @media screen and (max-width: 375px) {\n    padding: 15px;\n  }\n`;\n\nexport const Modalcont = styled.div`\n  position: relative;\n  // width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  // height: ${({ $Height }) => $Height}px; /* Use $Height prop */\n  width: ${({ $Width }) => $Width}px; /* Use $Width prop */\n  // height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n  // width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n  @media screen and (min-width: 375px) {\n    // width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-y: visible;\n  }\n`;\n// height: ${({ $Height }) => $Height}; /* Use $Height prop */\n// width: ${({ $Width }) => $Width}; /* Use $Width prop */\n\n// @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   overflow-y: visible;\n// }\n\n//   height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     min-height: ${({ $developers }) => ($developers ? '650px' : 'unset')};\n//     width: ${({ $developers }) => ($developers ? '730px' : '350px')};\n//     width: ${props =>\n//       props.$containerWidth ? `${props.$containerWidth}px` : '350px'};\n//     overflow-y: visible;\n//   }\n// `;\n\n// .modal {\n//   position: fixed;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   padding: 24px;\n\n//   background-color: #161616;\n//   z-index: 900;\n// }\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n\n// .ModalClose {\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n//   background-color: white;\n//   padding: 0;\n//   color: #161616;\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\n// import xCloseImg from './x-close.svg';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { updateUserAvatar, updateUserInfo } from '../../redux/auth/auth-operations';\nimport  registerSchema  from '../../schemas/registerSchema';\n// нужен Loader на кнопку?\n// import SmallLoader from 'components/Loader/SmallLoader';\nimport {\n  SubmitBtnInfo,\n  FormUserInfo,\n  AddPhoto,\n  AvatarEdit,\n  Avatar,\n  PlusButton,\n  Input,\n  LabelWrap,\n  TitleInfo,\n} from './UserInfo.styled';\nimport {\n  ErrorPara,\n  HideBtn,\n} from '../RegisterForm/RegisterForm.styled';\nimport Icon from '../Icon/Icon';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Modal from '../Modal/Modal/Modal';\nimport { selectUser } from '../../redux/auth/auth-selectors';\n\nconst UserInfo = ({showModal}) => {\n  const user = useSelector(selectUser)\nconst {name, email,password, avatar} = user\n  const [visible, setVisible] = useState(false);\n  const [preview, setPreview] = useState(null);\n  const dispatch = useDispatch();\n  // const { isLoading } = useAuth();\n\n  function changeImg(event) {\n    const avatarNew = event.target.files[0]\n    // console.log(event)\n    const file = new FileReader();\n    file.onload = function () {\n      setPreview(file.result);\n    };\n    file.readAsDataURL(avatarNew);\nsetValue(\"avatar\", [avatarNew])\n  }\n\n  const submit = async evt => { \n    const formData = {\n      name: evt.name,\n      email: evt.email,\n      password: evt.password,\n    };\n    const hasAvatar = evt.avatar.length > 0\n    if (hasAvatar) {\n      dispatch(updateUserAvatar(evt.avatar[0]))\n    }\n    const isValid = await registerSchema.isValid(formData);\n\n          if (!isValid) {\n            return;\n           }\n           \n        dispatch(updateUserInfo({ ...formData }))\n        // await new Promise(res => setTimeout(res, 500));\n  }\n\n  const {register, handleSubmit, setValue, formState:{errors, isValid}  } = useForm({\n    initialValues: {\n             name: '',\n            email: '',\n            password: '',\n            // avatar: avatar,\n          },\n    mode: \"onBlur\",\n    resolver:yupResolver(registerSchema)\n  })\n\n  return (\n    \n    <Modal width={335} height={440} onClose={() => showModal(false)}>\n\n      <TitleInfo>Edit profile</TitleInfo>\n      <FormUserInfo onSubmit={handleSubmit(submit)}>\n        <Avatar>\n          <AvatarEdit>\n              {avatar !== 'avatar/standartAvatar.png' || !!preview  ? (\n                <img\n                  src={preview || avatar}\n                  alt=\"avatar\"\n                  style={{ width: 68, height: 68, objectFit: 'cover' }}\n                />\n              ) : (\n                <Icon width={68}\n                height={68}\n                fillColor={'var(--icon-user)'}\n                strokeColor={'var(--icon-user)'}\n                name={\"user-avatar\"}\n                />\n              )}\n              <PlusButton>\n                <Icon width={10}\n                      height={10}\n                      fillColor={'none'}\n                      strokeColor={'#161616'}\n                      name={\"icon-plus\"}\n                      />\n                <AddPhoto\n                {...register('avatar' )}\n                  type=\"file\"\n                  name= \"avatar\"\n                  accept=\".png, .jpg, .jpeg\"\n                  onChange={changeImg}\n                />\n              </PlusButton>\n           </AvatarEdit>\n        </Avatar>      \n\n         <LabelWrap>\n             <Input \n             {...register('name',{value: name} )}\n              name=\"name\"\n              placeholder={name}\n            />\n            {errors?.name && (<ErrorPara>{errors?.name?.message || 'Errors!'}</ErrorPara>)}       \n          </LabelWrap>        \n          \n        <LabelWrap>\n            <Input\n             {...register('email', {value: email}) }\n              name=\"email\"\n              placeholder= {email}\n              type=\"email\"\n            />\n             {errors?.email && (<ErrorPara>{errors?.email?.message || 'Errors!'}</ErrorPara>)}\n          </LabelWrap> \n       \n              <LabelWrap>\n                <Input\n                {...register('password', {value: password}) }\n                  name=\"password\"\n                  placeholder= \"password\"\n                  type={visible ? 'text' : 'password'}\n                />\n                 {errors?.password && (<ErrorPara>{errors?.password?.message || 'Errors!'}</ErrorPara>)}\n                <HideBtn\n                  type=\"button\"\n                  onClick={() => {\n                    setVisible(!visible);\n                  }}\n                >\n                 <Icon width={20}\n                      height={20}\n                      fillColor={'none'}\n                      strokeColor={`var(--icon-color)`}\n                      name={\"eye\"}\n                      />\n                </HideBtn>\n              </LabelWrap>\n         \n          <SubmitBtnInfo type=\"submit\"\n            disabled={!isValid}> \n            Send\n          </SubmitBtnInfo>\n      </FormUserInfo >  \n    </Modal>\n  \n            \n      \n      \n    \n    \n    \n  )       \n\n \n};\n\nexport default UserInfo;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Styled from './UserHeader.styled';\nimport { selectUser } from '../../../redux/auth/auth-selectors';\nimport UserDefaultDark from '../../../assets/img/user-default/user-default-dark.png';\nimport UserDefaultLight from '../../../assets/img/user-default/user-default-light.png';\nimport UserDefaultViolet from '../../../assets/img/user-default/user-default-violet.png';\n\n// import UserInfo from 'components/UserInfo/UserInfo';\nimport UserInfo from '../../UserInfo/UserInfo'\n\nconst UserHeader = ({ currentTheme }) => {\n  const user = useSelector(selectUser);\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  // const [open, setOpen] = useState(false);\n  // const handleModalOpen = () => setOpen(true);\n  // const handleModalClose = () => setOpen(false);\n\n  let iconSrc;\n  switch (currentTheme) {\n    case 'dark':\n      iconSrc = UserDefaultDark;\n      break;\n    case 'light':\n      iconSrc = UserDefaultLight;\n      break;\n    case 'violet':\n      iconSrc = UserDefaultViolet;\n      break;\n    default:\n      iconSrc = UserDefaultDark;\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n <Styled.UserDiv>\n        <Styled.UserName>{user.name}</Styled.UserName>\n        {user.avatar !== 'avatar/standartAvatar.png' ? (\n          <Styled.UserImg\n            src={user.avatar}\n            alt=\"User Image\"\n            onClick={toggleModal}\n          />\n        ) : (\n          <Styled.UserIconImg\n            src={iconSrc}\n            alt=\"User default image\"\n            onClick={toggleModal}\n          ></Styled.UserIconImg>\n        )}\n\n\n      </Styled.UserDiv>\n      {/* {showModal && (<UserInfo showModal={setShowModal} />)} */}\n      {showModal && (<UserInfo showModal={setShowModal} />)}\n\n    </>\n     \n    \n  );\n};\nexport default UserHeader;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Styled from './ThemeSelection.styled';\n\nimport UserHeader from '../UserHeader/UserHeader';\nimport { updateTheme } from '../../../redux/theme/theme-operations';\nimport baseSvgPath from '../../../assets/svg/sprite.svg';\n\nconst ThemeSelection = () => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentTheme, setCurrentTheme] = useState(\n    localStorage.getItem('currentTheme') || 'dark'\n  );\n\n  const menuRef = useRef(null);\n  const textRef = useRef(null);\n  const svgRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const handleThemeChange = theme => {\n    dispatch(updateTheme({ theme }));\n    setCurrentTheme(theme);\n  };\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', currentTheme);\n    localStorage.setItem('currentTheme', currentTheme);\n  }, [currentTheme]);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        menuRef.current &&\n        !menuRef.current.contains(event.target) &&\n        !textRef.current.contains(event.target) &&\n        !svgRef.current.contains(event.target)\n      ) {\n        setShowMenu(false);\n      }\n    };\n\n    const handleKeyPress = event => {\n      if (event.key === 'Escape') {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  return (\n    <Styled.ThemeDiv>\n      <Styled.ThemeSubDiv ref={textRef} onClick={toggleMenu}>\n        <Styled.ThemeText>Theme</Styled.ThemeText>\n        <Styled.ThemeIcon ref={svgRef}>\n          <use\n            href={baseSvgPath + (showMenu ? '#chevron-down' : '#chevron-down')} //I think we can have chevron-up icon when theme is being selecting\n          />\n        </Styled.ThemeIcon>\n      </Styled.ThemeSubDiv>\n      {showMenu && (\n        <Styled.DropdownMenu ref={menuRef}>\n          <ul>\n            <li onClick={() => handleThemeChange('dark')}>Dark</li>\n            <li onClick={() => handleThemeChange('light')}>Light</li>\n            <li onClick={() => handleThemeChange('violet')}>Violet</li>\n          </ul>\n        </Styled.DropdownMenu>\n      )}\n      <UserHeader currentTheme={currentTheme} />\n    </Styled.ThemeDiv>\n  );\n};\n\nexport default ThemeSelection;\n","import * as Styled from './Header.styled';\nimport ThemeSelection from './ThemeSelection/ThemeSelection';\nimport Icon from 'components/Icon/Icon';\n\nconst Header = ({ openSidebar }) => {\n  return (\n    <Styled.Header>\n      <Styled.MobMenuBtn type=\"button\" onClick={openSidebar}>\n        <Icon name=\"icon-menu\"></Icon>\n      </Styled.MobMenuBtn>\n\n      <Styled.UserInfoDiv>\n        <ThemeSelection />\n      </Styled.UserInfoDiv>\n    </Styled.Header>\n  );\n};\n\nexport default Header;\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeInAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst timingFunction = 'cubic-bezier(0.42, 0, 0.58, 1)';\n\nexport const BoardListContainer = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const BoardItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  height: 61px;\n  align-items: center;\n  padding: 20px 24px;\n  position: relative;\n\n  overflow: hidden;\n\n  &:hover,\n  &:focus {\n    background-color: var(--primary-bg-color);\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      top: 0;\n      right: 0;\n      width: 4px;\n      border-radius: 0px 4px 4px 0px;\n      border-left: 4px solid transparent;\n      border-right: 4px solid var(--accent-icon-color);\n      animation: ${fadeInAnimation} 0.3s ${timingFunction} forwards;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BoardItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 61px;\n  align-items: center;\n  padding: 20px 24px;\n  position: relative;\n\n  &:hover .boardBtnSvg {\n    stroke: #fff;\n  }\n`;\n\nexport const BoardItemTitleBlock = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const BoardIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke-width: 1.5px;\n  stroke: var(--primary-text-color);\n  fill: none;\n  animation: scaleAndRotate 5s infinite alternate;\n`;\n\nexport const BoardTitle = styled.h2`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primary-text-color);\n`;\n\nexport const BoardItemButtonsBlock = styled.ul`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const BoardBtnSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--primary-text-color);\n  fill: none;\n`;\n\nexport const HoverBoardBtnSvg = styled(BoardBtnSvg)`\n  &:hover {\n    stroke: var(--primary-text-color); /* Білий обведення при наведенні */\n  }\n`;\nexport const BoardBtn = styled.button``;\n","// import React, { useState } from 'react';\n// import { NavLink, useLocation, useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import Modal from 'components/Modal/ModalKill';\n// import EditBoardForm from './EditBoardForm'; // Виправте шлях\n\n// import { deleteBoard } from '../../../redux/'; ----------------- Імпорт функції deleteBoard з Redux для видалення дошки\n// import { selectBoard } from '../../../redux/'; ----------------- Імпорт селектора selectBoard для отримання даних про дошку з Redux\nimport {\n  BoardItem,\n  BoardItemTitleBlock,\n  BoardIcon,\n  BoardTitle,\n  BoardItemButtonsBlock,\n  BoardBtn,\n  BoardBtnSvg,\n} from './BoardListItem.styled';\nimport sprite from '../../../assets/svg/sprite.svg';\n\n// Заглушка для EditBoardForm\nconst BoardListItem = ({ board }) => {\n  // const location = useLocation();\n  // const [showModal, setShowModal] = useState(false);\n  // const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const currentBoard = useSelector(selectBoard);\n  const handleDeleteBoard = boardId => {\n    // dispatch(deleteBoard(boardId)).then(action => {\n    //   if (action.type !== 'boards/deleteBoard/fulfilled') {\n    //     return;\n    //   }\n    //   if (currentBoard._id === boardId) {\n    //     navigate('/home');\n    //   }\n    // });\n    console.log(`Deleting board with ID ${boardId}`);\n  };\n\n  return (\n    <>\n      {/* ------------Посилання на сторінку дошки з назвою та іконкою */}\n      {/*<StyledNavLink\n        to={`/home/${board.title}`}\n        state={{ from: location }}\n        className=\"boardItem\"\n      >\n      </StyledNavLink>\n      */}\n      <BoardItem>\n        <BoardItemTitleBlock>\n          <BoardIcon>\n            <svg>\n              <use href={`${sprite}#project`}></use>\n            </svg>\n          </BoardIcon>\n          <BoardTitle>{board.title}</BoardTitle>\n        </BoardItemTitleBlock>\n\n        {/*----------------- Блок з кнопками для редагування та видалення дошки */}\n        <div>\n          <BoardItemButtonsBlock>\n            {/* --------------------- Кнопка для редагування дошки */}\n            <li>\n              {/* <BoardBtn type=\"button\" onClick={toggleModal}> */}\n              <BoardBtnSvg>\n                <svg>\n                  <use href={`${sprite}#pencil`}></use>\n                </svg>\n              </BoardBtnSvg>\n              {/* </BoardBtn> */}\n            </li>\n\n            {/* ----------------------- Кнопка для видалення дошки */}\n            <li>\n              <BoardBtn\n                type=\"button\"\n                onClick={() => handleDeleteBoard(board._id)}\n              >\n                <BoardBtnSvg>\n                  <svg>\n                    <use href={`${sprite}#trash`}></use>\n                  </svg>\n                </BoardBtnSvg>\n              </BoardBtn>\n            </li>\n          </BoardItemButtonsBlock>\n        </div>\n      </BoardItem>\n\n      {/* ----------------Модальне вікно для редагування дошки */}\n      {/* {showModal && (\n        <Modal closeModal={toggleModal}>\n           <EditBoardForm\n            boardId={board._id}\n            initialTitle={board.title}\n            initialIconName={board.icon}\n            initialBackgroundName={board.background}\n            handleClose={toggleModal}\n          /> \n          \n        </Modal>\n      )} */}\n    </>\n  );\n};\n\nexport default BoardListItem;\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getAllBoardsThunk,\n  getBoardByIdThunk,\n} from '../../../redux/boards/boards-operations';\n\nimport { BoardListContainer, BoardItem } from './BoardList.styled';\nimport BoardListItem from '../BoardListItem/BoardListItem';\nimport { selectBoards } from '../../../redux/boards/boards-selectors.js';\n\nconst BoardList = () => {\n  const [activeBoardId, setActiveBoardId] = useState(0);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  const handleClick = boardId => {\n    dispatch(getBoardByIdThunk(boardId));\n    setActiveBoardId(boardId);\n  };\n\n  const elements = boards.map(({ _id, title }) => (\n    <BoardItem\n      key={_id}\n      onClick={() => handleClick(_id)}\n      className={activeBoardId === _id ? 'activeBoard' : ''}\n    >\n      {' '}\n      <BoardListItem board={{ title }} />\n    </BoardItem>\n  ));\n\n  return (\n    <BoardListContainer>\n      {boards.length > 0 && elements}\n      {/*boards?.map(board => (\n        <BoardItem\n          key={board._id}\n          // onClick={() => handleClick(board._id)}\n          // className={activeBoardId === board._id ? 'activeBoard' : ''}\n        >\n          <BoardListItem board={board} allBoards={boards} />\n        </BoardItem>\n      ))   \n    */}\n    </BoardListContainer>\n  );\n};\n\nexport default BoardList;\n","import styled from 'styled-components';\n\nexport const HelpBlock = styled.div`\n  border-radius: 8px;\n  width: 197px;\n  height: 238px;\n  background: var(--primary-bg-color);\n\n  display: flex;\n  flex-direction: column;\n  padding: 14px;\n  margin-bottom: 24px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 212px;\n    height: 272px;\n    padding: 20px;\n  }\n`;\n\nexport const PlantImage = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n  transform-origin: center bottom;\n`;\n\nexport const HelpText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--primary-text-color);\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.42857;\n  }\n\n  span {\n    color: var(--additional-icon-color);\n  }\n`;\n\nexport const HelpOpenModal = styled.button`\n  display: flex;\n  width: 94px;\n  height: 20px;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--primary-text-color);\n  background-color: transparent;\n  border: none;\n  transition: 0.3s ease;\n\n  &:hover {\n    color: var(--accent-icon-hover-color);\n  }\n\n  svg {\n    display: block;\n    width: 20px;\n    height: 20px;\n    stroke: var(--primary-text-color);\n    fill: none;\n    transition: stroke 0.3s ease;\n  }\n\n  &:hover svg {\n    stroke: var(--accent-icon-hover-color);\n  }\n`;\n\nexport const HelpOpenModalIcon = styled.span`\n  /* Define your styles for the modal icon here */\n`;\n\nexport const HelpModal = styled.div`\n  /* Define your styles for the modal here */\n`;\n\nexport const HelpModalContent = styled.div`\n  /* Define your styles for the modal content here */\n`;\n","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input,\n    textarea {\n      width: 100%;\n    }\n  }\n`;\n\n// .modalform {\n//   border-radius: 8px;\n//   width: 352px;\n//   height: 307px;\n//   &:hover {\n//     border-color: #9dc888;\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     input,\n//     textarea {\n//       width: 100%;\n//     }\n//   }\n// }\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n  margin-top: 24px;\n`;\n\n// .modalTitle {\n//   font-weight: 500;\n//   font-size: 18px;\n//   letter-spacing: -0.02em;\n//   color: #fff;\n//   margin-bottom: 24px;\n//   /* margin-top: 24px; */\n// }\n\nexport const Emailinput = styled.input`\n  width: 100%;\n  border: 1px solid var(--additional-icon-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  // transition: opacity var(--easedTransition);\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\n// .emailinput {\n//   width: 100%;\n//   border: 1px solid #bedbb0;\n//   border-radius: 8px;\n//   margin-bottom: 14px;\n//   opacity: 0.4;\n//   height: 49px; /* Adjust the height as needed */\n//   color: #fff;\n//   padding: 14px 18px; /* Adjust the padding to change the input field size */\n//   background-color: transparent;\n//   transition: opacity 350ms ease-in-out;\n\n//   &:focus {\n//     outline: none;\n//     opacity: 1;\n//   }\n\n//   &:hover {\n//     opacity: 1;\n//   }\n// }\nexport const Commenttextarea = styled.textarea`\n  resize: none;\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  min-height: 120px;\n  opacity: 0.4;\n  background-color: transparent;\n  margin-bottom: 24px;\n  color: var(--input-text-color);\n  margin-right: 18px;\n  padding: 14px 18px;\n  // transition: opacity var(--easedTransition);\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n// .commenttextarea {\n//   resize: none;\n//   width: 100%;\n//   border: 1px solid #bedbb0;\n//   border-radius: 8px;\n//   min-height: 120px;\n//   opacity: 0.4;\n//   color: #fff;\n//   background-color: transparent;\n//   margin-bottom: 24px;\n//   margin-right: 18px;\n//   padding: 14px 18px;\n//   transition: opacity var(--easedTransition);\n\n//   /* transition: opacity 350ms ease-in-out; */\n\n//   &:focus {\n//     outline: none;\n//     opacity: 1;\n//   }\n\n//   &:hover {\n//     opacity: 1;\n//   }\n// }\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--input-bg-color);\n  cursor: pointer;\n  // transition: opacity var(--easedTransition);\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n// .buttonSend {\n//   border-radius: 8px;\n//   width: 100%;\n//   height: 49px;\n//   background-color: #bedbb0;\n//   color: #161616;\n//   cursor: pointer;\n//   transition: opacity 350ms ease-in-out;\n\n//   &:hover {\n//     opacity: 0.7;\n//   }\n// }\n// .themed_toaster {\n//   border: 1px solid #bedbb0;\n//   background-color: #1f1f1f;\n//   color: #fff;\n//   text-align: center;\n//   filter: drop-shadow(1px 1px 7px #bedbb0);\n// }\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\nimport { needhelp } from '../../../redux/needhelp/needhelp-operation.js';\nimport { toast } from 'react-toastify';\nimport {\n  Modalform,\n  ModalTitle,\n  Emailinput,\n  Commenttextarea,\n  ButtonSend,\n} from './NeedHelpModal.styled';\n// import css from './NeedHelpModal.module.css';\n\nconst NeedHelpModal = ({ showModal }) => {\n  const [email, setEmail] = useState('');\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const TOASTER = {\n    style: {\n      border: '2px solid #bedbb0',\n      backgroundColor: '#1f1f1f',\n      color: '#fff',\n      textAlign: 'center',\n    },\n    position: 'top-center',\n    duration: 2000,\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (email.trim() === '' || text.trim() === '') {\n      toast('Please enter data to submit ❗️', TOASTER);\n      return;\n    }\n\n    if (text.trim().length < 10) {\n      toast('Comment must be at least 10 characters long ❗️', TOASTER);\n      return;\n    }\n\n    try {\n      dispatch(needhelp({ email, text }));\n      toast('Your message was sent successfully ✅', TOASTER);\n      showModal(false);\n    } catch (error) {\n      toast('Failed to send email', TOASTER);\n    }\n  };\n\n  const handleEmailChange = evt => {\n    setEmail(evt.target.value);\n  };\n\n  const handleTextChange = evt => {\n    setText(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={400} height={307} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Need help'}</ModalTitle>\n          <Emailinput\n            value={email}\n            onChange={handleEmailChange}\n            required\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n          />\n          <Commenttextarea\n            type=\"text\"\n            name=\"comment\"\n            value={text}\n            onChange={handleTextChange}\n            placeholder=\"Comment\"\n          />\n          <ButtonSend type=\"submit\">Send</ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default NeedHelpModal;\n","import React, { useState } from 'react';\n//import Modal from 'components/Modal/Modal';\nimport {\n  HelpBlock,\n  PlantImage,\n  HelpText,\n  HelpOpenModal,\n  HelpOpenModalIcon,\n  HelpModal,\n  HelpModalContent,\n} from './NeedHelp.styled';\nimport NeedHelpModal from 'components/Modal/NeedHelpModal/NeedHelpModal'; // Імпортуйте компонент HelpForm з файлу HelpForm\n// import plantImage from '../../../assets/img/png/flower1x.png';\nimport sprite from '../../../assets/svg/sprite.svg';\nimport plant1x from \"../../../assets/img/png/flower1x.png\"\nimport plant2x from \"../../../assets/img/png/flower2x.png\"\n\nconst NeedHelp = () => {\n  const [showModal, setShowModal] = useState(false); // Стан для відображення/приховування модального вікна\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal); // Функція для перемикання стану модального вікна\n  const dpr = window.devicePixelRatio || 1;\n\n  const plantImage = dpr > 1 ? plant2x : plant1x; // ------------  Вибір зображення рослини в залежності від девайсу\n  // const plantImage = '../../../assets/img/png/flower1x.png'; // заглушка для зображення рослини\n\n  return (\n    // Блок з інформацією та кнопкою для відкриття модального вікна\n    <HelpBlock>\n      <PlantImage src={plantImage} alt=\"Plant as a helper\" />\n      <HelpText>\n        If you need help with <span>TaskPro</span>, check out our support\n        resources or reach out to our customer support team.\n      </HelpText>\n\n      {/* ------------Кнопка для відкриття модального вікна */}\n      <HelpOpenModal onClick={toggleModal}>\n        <span>\n          <svg>\n            {/* Використання спрайта */}\n            <use href={`${sprite}#help_circle`}></use>\n          </svg>\n          {/* ----------Іконка відкриття модального вікна */}\n          <HelpOpenModalIcon />\n        </span>\n        Need help?\n      </HelpOpenModal>\n\n      {showModal && (\n        <HelpModal>\n          <HelpModalContent>\n            <NeedHelpModal showModal={setShowModal} />\n          </HelpModalContent>\n        </HelpModal>\n      )}\n    </HelpBlock>\n  );\n};\n\nexport default NeedHelp;\n","export const CLOSE_KEY_CODE = 'Escape';\n\nexport const LABEL_ARR = [\n  { id: 0, priority: 'low', color: 'blue' },\n  { id: 1, priority: 'medium', color: 'pink' },\n  { id: 2, priority: 'high', color: 'green' },\n  { id: 3, priority: 'without priority', color: 'gray' },\n];\n\nexport const ICONS_ARRAY = [\n  { id: 0, name: 'icon-board-fourCircles-1', label: 'project' },\n  { id: 1, name: 'icon-board-star-2', label: 'star' },\n  { id: 2, name: 'icon-board-loading-3', label: 'loading' },\n  { id: 3, name: 'icon-board-puzzle-4', label: 'puzzle-piece' },\n  { id: 4, name: 'icon-board-box-5', label: 'container' },\n  { id: 5, name: 'icon-board-lightning-6', label: 'lightning' },\n  { id: 6, name: 'icon-board-colors-7', label: 'colors' },\n  { id: 7, name: 'icon-board-hexagon-8', label: 'hexagon' },\n];\n\nexport const BACKDROP_TRANSITION = {\n  initial: { opacity: 0, transition: { type: 'spring' } },\n  isOpen: { opacity: 1 },\n  exit: { opacity: 0 },\n};\n\nexport const MODAL_TRANSITION = {\n  initial: {\n    y: '-100vh',\n    transition: { type: 'spring' },\n  },\n  isOpen: { y: '0' },\n  exit: {\n    top: '100vh',\n    transition: { duration: 5 },\n  },\n};\n\nexport const TOASTER = {\n  style: {\n    border: '2px solid #bedbb0',\n    backgroundColor: '#1f1f1f',\n    color: '#fff',\n    textAlign: 'center',\n  },\n  position: 'top-center',\n  duration: 2000,\n};\n\nexport const PROGRESS_BAR_COLORS = [\n  '#dddddd9b',\n  '#ff1900',\n  '#f6b44d',\n  '#99dab2',\n  '#008d52',\n];\n\nexport const DEFAULT_BACKGROUND_ID = '65e476ee9e0727c033dddb93';\n\nexport const MAX_DESCR_LENGTH = 80;\n","var _defs;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgIconsSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-fourCircles-1\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M4.396 6.978c0.301-1.281 1.301-2.282 2.582-2.582v0c1.11-0.26 2.266-0.26 3.377 0v0c1.281 0.301 2.282 1.301 2.582 2.582v0c0.26 1.11 0.26 2.266 0 3.377v0c-0.301 1.281-1.301 2.282-2.582 2.582v0c-1.11 0.26-2.266 0.26-3.377 0v0c-1.281-0.301-2.282-1.301-2.582-2.582v0c-0.26-1.11-0.26-2.266 0-3.377v0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M4.396 21.645c0.301-1.281 1.301-2.282 2.582-2.582v0c1.11-0.261 2.266-0.261 3.377 0v0c1.281 0.3 2.282 1.301 2.582 2.582v0c0.26 1.111 0.26 2.266 0 3.377v0c-0.301 1.281-1.301 2.282-2.582 2.582v0c-1.11 0.261-2.266 0.261-3.377 0v0c-1.281-0.3-2.282-1.301-2.582-2.582v0c-0.26-1.111-0.26-2.266 0-3.377v0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M19.063 6.978c0.3-1.281 1.301-2.282 2.582-2.582v0c1.111-0.26 2.266-0.26 3.377 0v0c1.281 0.301 2.282 1.301 2.582 2.582v0c0.261 1.11 0.261 2.266 0 3.377v0c-0.3 1.281-1.301 2.282-2.582 2.582v0c-1.111 0.26-2.266 0.26-3.377 0v0c-1.281-0.301-2.282-1.301-2.582-2.582v0c-0.261-1.11-0.261-2.266 0-3.377v0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M19.063 21.645c0.3-1.281 1.301-2.282 2.582-2.582v0c1.111-0.261 2.266-0.261 3.377 0v0c1.281 0.3 2.282 1.301 2.582 2.582v0c0.261 1.111 0.261 2.266 0 3.377v0c-0.3 1.281-1.301 2.282-2.582 2.582v0c-1.111 0.261-2.266 0.261-3.377 0v0c-1.281-0.3-2.282-1.301-2.582-2.582v0c-0.261-1.111-0.261-2.266 0-3.377v0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-star-2\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 2.667l2.683 6.975c0.376 0.978 0.564 1.466 0.856 1.878 0.259 0.364 0.577 0.683 0.942 0.942 0.411 0.292 0.9 0.48 1.878 0.856l6.975 2.683-6.975 2.683c-0.978 0.376-1.466 0.564-1.878 0.856-0.364 0.259-0.683 0.577-0.942 0.942-0.292 0.411-0.48 0.9-0.856 1.878l-2.683 6.975-2.683-6.975c-0.376-0.978-0.564-1.466-0.856-1.878-0.259-0.364-0.578-0.683-0.942-0.942-0.411-0.292-0.9-0.48-1.878-0.856l-6.975-2.683 6.975-2.683c0.978-0.376 1.466-0.564 1.878-0.856 0.364-0.259 0.683-0.578 0.942-0.942 0.292-0.411 0.48-0.9 0.856-1.878l2.683-6.975z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-loading-3\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M4.454 22.666c-1.67-2.893-0.821-6.58 1.944-8.453l0.003-0.003c2.221-1.501 5.143-1.45 7.312 0.126l4.576 3.327c2.167 1.576 5.090 1.627 7.312 0.126l0.003-0.003c2.766-1.872 3.616-5.563 1.943-8.453M22.669 27.546c-2.893 1.669-6.58 0.821-8.453-1.944l-0.003-0.003c-1.501-2.221-1.45-5.143 0.126-7.312l3.327-4.576c1.576-2.167 1.627-5.090 0.126-7.312l-0.006-0.003c-1.872-2.763-5.563-3.615-8.453-1.942M25.427 6.572c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-puzzle-4\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 2.667l4.8 4.8c3.2-8.4 12.133 0.533 3.733 3.733l4.8 4.8-4.8 4.8c-3.2-8.4-12.133 0.533-3.733 3.733l-4.8 4.8-4.8-4.8c-3.2 8.4-12.133-0.533-3.733-3.733l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-0.533 3.733-3.733l4.8-4.8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-box-5\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M27.333 9.704l-11.333 6.296M16 16l-11.333-6.296M16 16l0 12.667M28 21.411v-10.823c0-0.457 0-0.685-0.067-0.889-0.060-0.18-0.157-0.346-0.285-0.485-0.145-0.158-0.345-0.269-0.744-0.491l-9.867-5.481c-0.378-0.21-0.567-0.315-0.767-0.356-0.177-0.036-0.36-0.036-0.537 0-0.2 0.041-0.389 0.146-0.767 0.356l-9.867 5.481c-0.399 0.222-0.599 0.333-0.744 0.491-0.129 0.14-0.226 0.305-0.286 0.485-0.067 0.204-0.067 0.432-0.067 0.889v10.823c0 0.457 0 0.685 0.067 0.889 0.060 0.18 0.157 0.346 0.286 0.485 0.145 0.158 0.345 0.269 0.744 0.491l9.867 5.482c0.378 0.21 0.567 0.315 0.767 0.356 0.177 0.036 0.36 0.036 0.537 0 0.2-0.041 0.389-0.146 0.767-0.356l9.867-5.482c0.399-0.222 0.599-0.333 0.744-0.491 0.129-0.14 0.226-0.305 0.285-0.485 0.067-0.204 0.067-0.432 0.067-0.889z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-lightning-6\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M18.999 2.667h-7.674c-0.239 0-0.359 0-0.465 0.036-0.093 0.032-0.178 0.085-0.249 0.154-0.080 0.078-0.133 0.185-0.24 0.399l-5.6 11.2c-0.256 0.511-0.383 0.767-0.353 0.974 0.027 0.181 0.127 0.344 0.277 0.449 0.172 0.12 0.458 0.12 1.029 0.12h8.274l-4 13.333 16.258-16.86c0.548-0.569 0.823-0.853 0.839-1.097 0.014-0.211-0.073-0.417-0.235-0.553-0.186-0.157-0.581-0.157-1.372-0.157h-9.49l3-8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-colors-7\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 27.296c1.415 1.267 3.284 2.037 5.333 2.037 4.418 0 8-3.582 8-8 0-3.689-2.497-6.795-5.893-7.72M8.56 13.614c-3.396 0.925-5.894 4.031-5.894 7.72 0 4.418 3.582 8 8 8s8-3.582 8-8c0-1.041-0.199-2.035-0.56-2.947M24 10.667c0 4.418-3.582 8-8 8s-8-3.582-8-8 3.582-8 8-8c4.418 0 8 3.582 8 8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-board-hexagon-8\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M14.964 3.242c0.378-0.21 0.567-0.315 0.767-0.356 0.177-0.036 0.36-0.036 0.537 0 0.2 0.041 0.389 0.146 0.767 0.356l9.867 5.482c0.399 0.222 0.599 0.333 0.744 0.491 0.129 0.14 0.226 0.305 0.285 0.485 0.067 0.204 0.067 0.432 0.067 0.889v10.823c0 0.457 0 0.685-0.067 0.889-0.060 0.18-0.157 0.346-0.285 0.485-0.145 0.158-0.345 0.269-0.744 0.491l-9.867 5.482c-0.378 0.21-0.567 0.315-0.767 0.356-0.177 0.036-0.36 0.036-0.537 0-0.2-0.041-0.389-0.146-0.767-0.356l-9.867-5.482c-0.399-0.222-0.599-0.333-0.744-0.491-0.129-0.14-0.226-0.305-0.286-0.485-0.067-0.204-0.067-0.432-0.067-0.889v-10.823c0-0.457 0-0.685 0.067-0.889 0.060-0.18 0.157-0.346 0.286-0.485 0.145-0.158 0.345-0.269 0.744-0.491l9.867-5.481z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-default-bg\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"var(--default-icon-stroke)\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2,\n    d: \"M25.333 28h1.347c1.295 0 1.942 0 2.299-0.27 0.311-0.235 0.503-0.595 0.526-0.984 0.027-0.447-0.332-0.985-1.051-2.063l-4.014-6.021c-0.594-0.89-0.89-1.335-1.264-1.49-0.327-0.136-0.694-0.136-1.021 0-0.374 0.155-0.671 0.6-1.264 1.49l-0.992 1.488M25.333 28l-10.246-14.8c-0.589-0.851-0.884-1.277-1.252-1.426-0.322-0.131-0.682-0.131-1.004 0-0.368 0.15-0.663 0.575-1.252 1.426l-7.928 11.452c-0.751 1.084-1.126 1.626-1.105 2.077 0.019 0.393 0.21 0.757 0.522 0.996 0.359 0.274 1.018 0.274 2.337 0.274h19.928zM28 8c0 2.209-1.791 4-4 4s-4-1.791-4-4c0-2.209 1.791-4 4-4s4 1.791 4 4z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconsSprite);\nexport default __webpack_public_path__ + \"static/media/icons-sprite.f7bad1557d5f1ff811b95faf64f78ba8.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h4`\n  color: var(--additional-text-color);\n  font-size: 18px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  p {\n    font-size: 10px;\n    position: absolute;\n    bottom: 10px;\n    color: var(--additional-bg-color);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  border: 1px solid var(input-border-color);\n  opacity: 0.5;\n  color: var(--additional-text-color);\n  font-size: 14px;\n  border-radius: 8px;\n  background-color: transparent;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  outline: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  transition: opacity 350ms ease-in-out;\n\n  &.invalid {\n    border: 2px solid var(--additional-bg-color);\n  }\n  &:focus {\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.p`\n  color: var(--additional-text-color);\n  font-size: 14px;\n  line-height: 1.5;\n  margin-bottom: 14px;\n`;\n\nexport const IconsUl = styled.ul`\n  display: flex;\n  margin-bottom: 24px;\n  gap: 8px;\n`;\n\nexport const IconSVG = styled.svg`\n  stroke: var(--icon-color);\n  stroke-opacity: 0.5;\n  transform: scale(1.05);\n`;\n\nexport const InputRadio = styled.input`\n  display: none;\n  &:checked + svg use {\n    stroke: var(--additional-text-color);\n    stroke-opacity: 1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const SmallLoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const BacksUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 24px;\n  gap: 4px;\n  width: 252px;\n  & #default-bg-img {\n    order: -1;\n  }\n`;\n\nexport const DefaultImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  background-color: var(--primary-bg-color);\n  border-radius: 8px;\n`;\n\nexport const BackInputRadio = styled.input`\n  display: none;\n  &:hover + img {\n    box-shadow: 0 0 0 1px var(--additional-icon-color);\n  }\n  &:hover + img,\n  &:hover + div {\n    box-shadow: 0 0 0 1px var(--additional-icon-color);\n  }\n  &:checked + img,\n  &:checked + div {\n    box-shadow: 0 0 0 2px var(--additional-icon-color);\n    transform: scale(1.05);\n  }\n`;\n\nexport const BackImage = styled.img`\n  border-radius: 7px;\n  width: 28px;\n  height: 28px;\n`;\n\nexport const Button = styled.button`\n  font-weight: 500;\n  font-size: 14px;\n  border-radius: 8px;\n  padding: 10px;\n  margin-top: 40px;\n  background-color: var(--additional-icon-color);\n  color: var(--btn-icon-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--additional-bg-color);\n  border-radius: 6px;\n  padding: 7px;\n`;\n\nexport const ChangeIcons = styled.button`\n  background: transparent;\n  padding: 0;\n  transition: filter 350ms linear;\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      filter: drop-shadow(1px 1px 5px var(--sidebar-logout));\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport sprite from '../../../assets/images/icons/icons-sprite.svg';\nimport { ICONS_ARRAY } from 'constants/index';\nimport { IconsUl, IconSVG, InputRadio } from './BoardModal.styled';\n\nexport const IconsList = ({ iconId }) => {\n  const [selectedIconId, setSelectedIconId] = useState(iconId);\n\n  const handleIconChange = id => {\n    setSelectedIconId(id);\n  };\n\n  return (\n    <IconsUl>\n      {ICONS_ARRAY.map(item => {\n        return (\n          <li key={item.id}>\n            <label>\n              <InputRadio\n                type=\"radio\"\n                name=\"iconId\"\n                value={selectedIconId}\n                defaultChecked={selectedIconId === item.label}\n                onChange={() => handleIconChange(item.label)}\n              />\n              <IconSVG width=\"18\" height=\"18\">\n                <use xlinkHref={`${sprite}#${item.name}`} />\n              </IconSVG>\n            </label>\n          </li>\n        );\n      })}\n    </IconsUl>\n  );\n};\n","export const BACKGROUND_LIST = [\n  'default',\n  'air',\n  'ballons',\n  'canyon',\n  'abstract',\n  'clouds',\n  'magnolia',\n  'milkyway',\n  'moon',\n  'night',\n  'palm',\n  'rocks',\n  'sea',\n  'stars',\n  'tree',\n  'yacht',\n];\n","import { useSelector } from 'react-redux';\n// import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n// import { useEffect } from 'react';\n// import { getBackgroundIcons } from '../../../redux/boards/boards-operations';\nimport Loader from '../../Loader/Loader';\nimport { selectIsLoading } from '../../../redux/boards/boards-selectors';\nimport {\n  BacksUl,\n  BackInputRadio,\n  BackImage,\n  SmallLoaderContainer,\n} from './BoardModal.styled';\nimport { backgroundMap } from './backgroundMap';\n\nexport const BacksList = ({ backgroundId }) => {\n  const [selectedBackId, setSelectedBackId] = useState(backgroundId);\n  const isLoading = useSelector(selectIsLoading);\n  // const backgroundIcons = useSelector(selectBackgroundIcons);\n  var temp = selectedBackId;\n  const temp1 = temp;\n  temp = temp1;\n\n  const backicons = backgroundMap();\n  // console.log(icons);\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(getBackgroundIcons());\n  // }, [dispatch]);\n\n  const handleBackChange = id => {\n    setSelectedBackId(id);\n  };\n\n  return isLoading ? (\n    <SmallLoaderContainer>\n      <Loader width=\"20\" height=\"20\" />\n    </SmallLoaderContainer>\n  ) : (\n    <BacksUl>\n      {backicons.map(item => {\n        return (\n          <li key={item.id} id={item.name}>\n            <label>\n              <BackInputRadio\n                type=\"radio\"\n                name=\"background\"\n                value={item.name}\n                // defaultChecked={selectedBackId}\n                onChange={() => handleBackChange(item.name)}\n              />\n              <BackImage\n                src={item.src}\n                alt=\"background miniature\"\n                width={28}\n                height={28}\n              />\n            </label>\n          </li>\n        );\n      })}\n    </BacksUl>\n  );\n};\n","import { BACKGROUND_LIST } from '../../../assets/constants/backgroundList';\nimport air from './small-back/air.png';\nimport ballons from './small-back/ballons.png';\nimport canyon from './small-back/canyon.png';\nimport abstract from './small-back/abstract.png';\nimport clouds from './small-back/clouds.png';\nimport magnolia from './small-back/magnolia.png';\nimport milkyway from './small-back/milkyway.png';\nimport moon from './small-back/moon.png';\nimport night from './small-back/night.png';\nimport palm from './small-back/palm.png';\nimport rocks from './small-back/rocks.png';\nimport sea from './small-back/sea.png';\nimport stars from './small-back/stars.png';\nimport tree from './small-back/tree.png';\nimport yacht from './small-back/yacht.png';\n\nexport const backgroundMap = () => {\n  const images = [\n    air,\n    ballons,\n    canyon,\n    abstract,\n    clouds,\n    magnolia,\n    milkyway,\n    moon,\n    night,\n    palm,\n    rocks,\n    sea,\n    stars,\n    tree,\n    yacht,\n  ];\n\n  const icons = images.map((image, index) => ({\n    id: index,\n    name: BACKGROUND_LIST[index],\n    src: image,\n    alt: `${index}`,\n  }));\n\n  return icons;\n};\n\n// import { BACKGROUND_LIST } from '../../../assets/constants/backgroundList';\n\n// import air from './small-back/air.png';\n// import ballons from './small-back/ballons.png';\n// import canyon from './small-back/canyon.png';\n// import abstract from './small-back/abstract.png';\n// import clouds from './small-back/clouds.png';\n// import magnolia from './small-back/magnolia.png';\n// import milkyway from './small-back/milkyway.png';\n// import moon from './small-back/moon.png';\n// import night from './small-back/night.png';\n// import palm from './small-back/palm.png';\n// import rocks from './small-back/rocks.png';\n// import sea from './small-back/sea.png';\n// import stars from './small-back/stars.png';\n// import tree from './small-back/tree.png';\n// import yacht from './small-back/yacht.png';\n\n// export const iconMap = () => {\n//   const nameBackround = BACKGROUND_LIST.map(background => `${background}`);\n\n//   const images = nameBackround.map((nameBackround, index) => ({\n//     id: index,\n//     name: nameBackround,\n//   }));\n\n//   return images;\n// };\n//  alt: `${index}`,\n//   console.log(import.meta.url);\n//   const absoluteURL = new URL(\n//     'small-back/milkyway.png',\n//     import.meta.url\n//   ).toString();\n//   console.log(absoluteURL);\n\n//   const fullPath = require.resolve('./small-back/milkyway.png');\n//   console.log(fullPath);\n\n// export const iconMap = async () => {\n//   const images = [];\n\n//   // Функция для загрузки изображения\n//   const loadImage = async (imagePath, index) => {\n//     return new Promise((resolve, reject) => {\n//       const img = new Image();\n//       img.onload = () =>\n//         resolve({ id: index, src: imagePath, alt: `${index}` });\n//       img.onerror = error => reject(error);\n//       img.src = imagePath;\n//     });\n//   };\n\n//   // Цикл по списку фоновых изображений\n//   for (let i = 0; i < BACKGROUND_LIST.length; i++) {\n//     try {\n//       const imagePath = `./small-back/${BACKGROUND_LIST[i]}.png`;\n//       const image = await loadImage(imagePath, i);\n//       images.push(image);\n//     } catch (error) {\n//       console.error(`Ошибка загрузки изображения: ${error}`);\n//       // Можно добавить обработку ошибок, если необходимо\n//     }\n//   }\n\n//   return images;\n// };\n","const Plus = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 20 20\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10 4.16663V15.8333\"\n        strokeWidth=\"1.8\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4.1665 10H15.8332\"\n        strokeWidth=\"1.8\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Plus;\n","import { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { nanoid } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n// import { MdFileUpload, MdDownloadDone } from 'react-icons/md';\nimport {\n  createBoardThunk,\n  updateBoardThunk,\n} from '../../../redux/boards/boards-operations';\nimport { selectOneBoard } from '../../../redux/boards/boards-selectors';\nimport { TOASTER } from '../../../constants/index';\n// import { DEFAULT_BACKGROUND_ID } from '../../../constants/index.js';\nimport { validateInputMaxLength } from '../../../helpers/validateInputMaxLength.js';\nimport Modal from '../Modal/Modal';\nimport { IconsList } from './IconsList';\nimport { BacksList } from '../BoardModal/BacksList';\nimport Plus from '../../Icon/Plus';\nimport {\n  Form,\n  Title,\n  Label,\n  Input,\n  Text,\n  Button,\n  Span,\n} from './BoardModal.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst BoardModal = ({ variant, closeModal, menu, closeMenu }) => {\n  const [errorMsgShown, setErrorMsgShown] = useState(false);\n  const [errorClassName, setErrorClassName] = useState('');\n  // const [customBackground, setCustomBackground] = useState(null);\n  // console.log(setCustomBackground);\n  // const defaultBackgroundId = 'default';\n\n  const titleRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n  const oneBoard = useSelector(selectOneBoard);\n\n  //const icons = iconMap();\n  //console.log(icons);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  // const handleUpload = event => {\n  //   const file = event.target.files[0];\n  //   setCustomBackground(file);\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { title, background, iconId } = e.target.elements;\n\n    if (!title.value.trim()) {\n      return toast('Enter title to create a board ❗️', TOASTER);\n    }\n    // const corbackground = { background.value === '' ? 'default' : background.value };\n    const data = {\n      title: title.value,\n      icon: iconId.value,\n      background: background.value === '' ? 'default' : background.value,\n    };\n\n    if (variant === 'add') {\n      dispatch(createBoardThunk(data)).then(action => {\n        if (action.type === 'boards/createBoard/fulfilled') {\n          navigate(`home/${action.payload.title}`);\n        }\n      });\n      toast('Board was created successfully ✅', TOASTER);\n    } else {\n      dispatch(updateBoardThunk({ boardId: oneBoard._id, dataUpdate: data }));\n      toast('Board was edited successfully ✅', TOASTER);\n    }\n\n    closeModal();\n    if (menu) closeMenu();\n    return;\n  };\n\n  return (\n    <Modal width={350} onClose={closeModal}>\n      <Form onSubmit={handleSubmit}>\n        <Title>{variant === 'add' ? 'New board' : 'Edit board'}</Title>\n        <Label>\n          <Input\n            className={errorClassName}\n            ref={titleRef}\n            type=\"text\"\n            placeholder={'Title'}\n            name=\"title\"\n            defaultValue={variant === 'add' ? '' : oneBoard.title}\n            autoComplete=\"off\"\n            maxLength={20}\n            onChange={e =>\n              validateInputMaxLength(e, setErrorMsgShown, setErrorClassName)\n            }\n          />\n          {errorMsgShown && <p>{'Maximum title length is 20 symbols'}</p>}\n        </Label>\n        <Text>{'Icons'}</Text>\n        <IconsList iconId={variant === 'add' ? 'project' : oneBoard.label} />\n        <Text>{'Background'}</Text>\n\n        <BacksList\n          backgroundId={variant === 'add' ? 'default' : oneBoard.background._id}\n        />\n        {/* // CHANGE ON CORRECT */}\n\n        <Button type=\"submit\">\n          <Span>\n            <Plus\n              width={14}\n              height={14}\n              strokeColor={'var(--btn-icon-color)'}\n            />\n          </Span>\n          {variant === 'add' ? 'Create' : 'Edit'}\n        </Button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default BoardModal;\n","export const validateInputMaxLength = (event, setError, setClassName) => {\n  const { value } = event.target;\n  if (value.length >= 25) {\n    setError(true);\n    setClassName('invalid');\n    return;\n  } else {\n    setError(false);\n    setClassName('');\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SidebarWrapper = styled.aside`\n  // position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  width: 225px;\n  height: 100vh;\n  background: var(--accent-bg-color);\n  transform: translateX(0px);\n  transition: all var(--transition);\n  // z-index: 200;\n\n\n  &.showSidebar {\n    transform: translateX(0);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    transform: translateX(0);\n  }\n`;\n\nexport const SidebarHeader = styled.div`\n  padding: 14px 14px 0;\n\n    color: color: var(--icon-color);\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.64px;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 24px 0;\n  }\n`;\n\nexport const LogoBlock = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  width: 104px;\n  height: 32px;\n  margin-bottom: 70px;\n\n  div {\n    display: flex;\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    background-color: var(--primary-bg-color);\n  }\n  p {\n    color: var(--icon-color);\n    font-weight: 600;\n    font-size: 16px;\n    letter-spacing: -0.04em;\n  }\n  svg {\n    display: block;\n    fill: var(--primary-text-color);\n    stroke: none;\n  }\n`;\n\nexport const BoardBlock = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  h2 {\n    font-weight: 400;\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--additional-text-color-op);\n    margin-bottom: 8px;\n  }\n`;\n\nexport const CreateBoardBlock = styled.div`\n  display: flex;\n  width: 197px;\n  height: 70px;\n  margin-bottom: 40px;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid var(--additional-text-color-op);\n  border-bottom: 1px solid var(--additional-text-color-op);\n\n  @media screen and (min-width: 768px) {\n    width: 212px;\n    height: 70px;\n  }\n`;\n\nexport const CreateBoardText = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primary-text-color);\n  width: 76px;\n  height: 42px;\n  display: flex;\n\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n\n  background-color: var(--accent-icon-color);\n  transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-icon-hover-color);\n    transform: scale(1.05);\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: var(--accent-bg-color);\n\n  &:hover,\n  &:focus {\n    // stroke: var(--accent-icon-hover-color);\n  }\n`;\n\nexport const SidebarBoardsList = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: auto;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--accent-icon-color);\n    border-radius: 8px;\n    opacity: 0.08;\n    cursor: pointer;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--accent-icon-hover-color);\n    border-radius: 5px;\n    cursor: pointer;\n  }\n`;\n\nexport const LogoutBlock = styled.div`\n  padding: 0 0 24px 24px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LogoutLink = styled(Link)`\n  display: flex;\n  width: 105px;\n  height: 32px;\n  gap: 14px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--primary-text-color);\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  \n\n  &:hover, \n  &:focus .p {var(--accent-icon-hover-color);\n  }\n`;\n\nexport const LogoutIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  stroke: var(--accent-icon-color);\n  fill: none;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: var(--accent-icon-hover-color);\n    transform: scale(1.05);\n  }\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // Додали useDispatch\nimport { logOut } from '../../redux/auth/auth-operations';\nimport BoardList from './BoardList/BoardList';\nimport NeedHelp from './NeedHelp/NeedHelp';\n// import Modal from '../Modal/ModalKill';\n// import SearchBoardModal from '../Modal/SearchBoardModal/SearchBoardModal';\nimport BoardModal from '../Modal/BoardModal/BoardModal';\nimport {\n  SidebarWrapper,\n  SidebarHeader,\n  LogoBlock,\n  LogoutLink,\n  SidebarBoardsList,\n  LogoutBlock,\n  LogoutIcon,\n  BoardBlock,\n  CreateBoardBlock,\n  CreateBoardText,\n  Button,\n  PlusIcon,\n} from './Sidebar.styled';\nimport sprite from '../../assets/svg/sprite.svg';\n\n// Додали оголошення AddBoardForm\n// const AddBoardForm = () => {};\n\n// const sprite = 'assets/svg/sprite.svg';\n// const plantImage = '';\n\nconst Sidebar = ({ showSidebar }) => {\n  // const [showModal, setShowModal] = useState(false);\n  // const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n  const [isAddBoardModalShown, setIsAddBoardModalShown] = useState(false);\n  const [isEditBoardModalShown, setIsEditBoardModalShown] = useState(false);\n  // const [isSearchModalOpen, setIsSearchModalOpen] = useState(false);\n  // const [showSearchResult, setShowSearchResult] = useState(false);\n\n  // Отримали функцію dispatch з useDispatch\n  const dispatch = useDispatch();\n\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   const { search } = event.target.elements;\n\n  //   dispatch(boardSearch(search.value.trim().toLowerCase()));\n  //   setShowSearchResult(true);\n  //   setIsSearchModalOpen(false);\n  // };\n  // Викликаємо функцію dispatch(logOut()) для виходу користувача\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarWrapper className={showSidebar ? 'showSidebar' : ''}>\n      {/* Логотип та назва додатку */}\n      <SidebarHeader>\n        <LogoBlock to=\"/home\">\n          <div>\n            {/* Використання спрайта */}\n            <svg>\n              <use href={`${sprite}#logo`}></use>\n            </svg>\n          </div>\n          <p>Task Pro</p>\n        </LogoBlock>\n      </SidebarHeader>\n\n      {/* Блок для створення нової дошки */}\n      <BoardBlock>\n        <h2>My boards</h2>\n        <CreateBoardBlock>\n          <CreateBoardText>Create a new board</CreateBoardText>\n          <Button onClick={() => setIsAddBoardModalShown(true)} type=\"button\">\n            <PlusIcon>\n              <svg>\n                <use href={`${sprite}#plus`}></use>\n              </svg>\n            </PlusIcon>\n          </Button>\n        </CreateBoardBlock>\n      </BoardBlock>\n\n      {/* Виведення списку дошок */}\n      <SidebarBoardsList> <BoardList /></SidebarBoardsList>\n\n      {/* Блок з інформацією NeedHelp */}\n      <div>\n        <NeedHelp />\n      </div>\n\n      {/* Кнопка LogOut */}\n      <LogoutBlock>\n        <LogoutLink>\n          <LogoutIcon>\n            <svg>\n              {/* Використання спрайта */}\n              <use href={`${sprite}#log-out`}></use>\n            </svg>\n          </LogoutIcon>\n          <Link to=\"/\" onClick={handleLogOut}>\n            <p>Log out</p>\n          </Link>\n        </LogoutLink>\n      </LogoutBlock>\n\n      {/* Модальне вікно для створення нової дошки\n      {showModal && (\n        <Modal closeModal={toggleModal}>\n          <AddBoardForm handleClose={toggleModal} />\n        </Modal>\n      )} */}\n      {isAddBoardModalShown && (\n        <BoardModal\n          variant=\"add\"\n          closeModal={() => setIsAddBoardModalShown(false)}\n          //  menu={menu}\n          closeMenu={showSidebar}\n        />\n      )}\n      {isEditBoardModalShown && (\n        <BoardModal\n          variant=\"edit\"\n          closeModal={() => setIsEditBoardModalShown(false)}\n        />\n      )}\n\n      {/* {isSearchModalOpen && (\n        <SearchBoardModal\n          onClose={() => setIsSearchModalOpen(false)}\n          handleSubmit={handleSubmit}\n        />\n      )} */}\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const TextDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const TextOnHomePage = styled.p`\n  color: #356745;\n  font-weight: 400;\n  font-size: 10px;\n  padding: 0 20px;\n  max-width: 335px;\n\n  @media only screen and (min-width: 375px) {\n    font-size: 12px;\n    //max-width: 486px;\n  }\n`;","import { TextDiv, TextOnHomePage } from \"./HomePageText.styled\";\n\nconst HomePageText = () => {\n    return (\n        <TextDiv>\n            <TextOnHomePage>\n                Before starting your project, it is essential{' '}\n                {/*<CreateBoard onClick={toggleModal}>*/}to create a board{/*</CreateBoard>*/} to\n                visualize and track all the necessary tasks and milestones. This board\n                serves as a powerful tool to organize the workflow and ensure\n                effective collaboration among team members.\n            </TextOnHomePage>\n        </TextDiv>\n    )\n}\n\nexport default HomePageText;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100vw;\n`;\n\n// export const SecondContainer = styled.div`\n//   display: block;\n//   \n// `;\n\nexport const MainContainer = styled.div`\n  //display: flex;\n  color: var(--primary-text-color);\n  background-color: var(--primary-bg-color);\n  //background-color: #1f1f1f;\n  width: 100%;\n  height: 100vh;\n  //min-height: 90.8vh;\n  //justify-content: center;\n  //margin-left: 0;\n\n  @media screen (max-width: 768px) {\n    margin-left: 259px;\n  }\n\n  p {\n    text-align: center;\n    //color: rgba(250, 250, 250, 0.5);\n    font-weight: 400;\n    font-size: 14px;\n    max-width: 486px;\n    align-self: center;\n  }\n\n  @media screen (max-width: 375px) {\n    p {\n      font-size: 12px;\n      max-width: 335px;\n    }\n  }\n`;\n","import { useState, useCallback, useEffect } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport Header from 'components/Header/Header';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport HomePageText from 'components/HomePageText/HomePageText';\nimport { MainContainer, Container } from './HomePage.styled';\nimport { selectAuthLoading } from '../../redux/auth/auth-selectors';\nimport { selectBoards } from '../../redux/boards/boards-selectors';\n\nconst HomePage = () => {\n  const isLoading = useSelector(selectAuthLoading);\n  const boards = useSelector(selectBoards);\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setShowSidebar(window.innerWidth >= 1440);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const openSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n\n  const closeSidebar = useCallback(() => {\n    if (window.innerWidth < 1440) {\n      setShowSidebar(false);\n    }\n  }, []);\n\n  const escClick = useCallback(\n    event => {\n      if (event.code === 'Escape') {\n        closeSidebar();\n      }\n    },\n    [closeSidebar]\n  );\n  \n  useEffect(() => {\n    window.addEventListener('keydown', escClick);\n    return () => {\n      window.removeEventListener('keydown', escClick);\n    };\n  }, [escClick]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n        <Container>\n        <Sidebar showSidebar={showSidebar} />\n          <MainContainer>\n          <Header openSidebar={openSidebar} />\n          {boards.length > 0 ?\n            <>\n              <Navigate to={`/home/${boards[0]._id}`} />\n              <Outlet />\n            </> :\n            <HomePageText />}\n          </MainContainer>\n        </Container>\n  );\n};\n\nexport default HomePage;\n","import * as yup from 'yup';\n\nconst registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Maximum name length is 32 symbols')\n    .required('Name is required'),\n  email: yup\n    .string()\n    \n    .matches(\n      /^[^@]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,4}$/,\n      'Invalid email format'\n    )\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Maximum password length is 64 symbols')\n    .matches(\n        /^[\\S]+$/,\n        'Invalid password format')\n    .required('Password is required'),\n});\n\nexport default registerSchema;\n"],"names":["Background","styled","div","_templateObject","_taggedTemplateLiteral","FormWrap","_templateObject2","AuthList","ul","_templateObject3","AuthLink","NavLink","_templateObject4","FormUi","form","_templateObject5","Input","input","_templateObject6","PassInputWrap","_templateObject7","HideBtn","button","_templateObject8","SubmitBtn","_templateObject9","ErrorPara","span","_templateObject10","Header","header","MobMenuBtn","UserInfoDiv","ThemeDiv","ThemeSubDiv","DropdownMenu","ThemeText","p","ThemeIcon","svg","UserDiv","UserName","UserImg","img","UserIconImg","TitleInfo","h3","LabelWrap","label","FormUserInfo","AddPhoto","AvatarEdit","Avatar","PlusButton","SubmitBtnInfo","Opacity","Modalcont","_ref","$Height","_ref2","$Width","_ref3","$developers","_ref4","_ref5","ModalClose","children","width","height","onClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","_jsx","onClick","_jsxs","stopPropagation","type","Icon","strokeColor","name","_errors$name","_errors$email","_errors$password","showModal","user","useSelector","selectUser","email","password","avatar","visible","setVisible","useState","preview","setPreview","dispatch","useDispatch","register","handleSubmit","setValue","formState","errors","isValid","useForm","initialValues","mode","resolver","yupResolver","registerSchema","Modal","onSubmit","async","formData","evt","length","updateUserAvatar","updateUserInfo","src","alt","style","objectFit","fillColor","accept","onChange","avatarNew","target","files","file","FileReader","onload","result","readAsDataURL","value","placeholder","message","disabled","currentTheme","setShowModal","toggleModal","prevShowModal","iconSrc","UserDefaultDark","_Fragment","Styled","UserInfo","ThemeSelection","showMenu","setShowMenu","setCurrentTheme","localStorage","getItem","menuRef","useRef","textRef","svgRef","handleThemeChange","theme","updateTheme","documentElement","setAttribute","setItem","handleClickOutside","current","contains","handleKeyPress","key","ref","toggleMenu","href","baseSvgPath","UserHeader","openSidebar","fadeInAnimation","keyframes","BoardListContainer","BoardItem","li","BoardItemTitleBlock","BoardIcon","BoardTitle","h2","BoardItemButtonsBlock","BoardBtnSvg","BoardBtn","board","concat","sprite","title","handleDeleteBoard","boardId","_id","console","log","selectBoards","state","boards","selectIsLoading","isLoading","selectOneBoard","oneBoard","BoardList","activeBoardId","setActiveBoardId","getAllBoardsThunk","elements","map","handleClick","getBoardByIdThunk","className","BoardListItem","HelpBlock","PlantImage","HelpText","HelpOpenModal","HelpOpenModalIcon","HelpModal","HelpModalContent","Modalform","ModalTitle","Emailinput","Commenttextarea","textarea","ButtonSend","setEmail","text","setText","TOASTER","border","backgroundColor","color","textAlign","position","duration","preventDefault","trim","toast","needhelp","error","required","NeedHelp","plantImage","window","devicePixelRatio","plant2x","NeedHelpModal","ICONS_ARRAY","id","Form","Title","h4","Label","Text","IconsUl","IconSVG","InputRadio","SmallLoaderContainer","BacksUl","BackInputRadio","_templateObject11","_templateObject12","BackImage","_templateObject13","Button","_templateObject14","Span","_templateObject15","IconsList","_templateObject16","iconId","selectedIconId","setSelectedIconId","item","defaultChecked","handleIconChange","xlinkHref","BACKGROUND_LIST","BacksList","backgroundId","selectedBackId","setSelectedBackId","backicons","image","index","Loader","handleBackChange","viewBox","fill","stroke","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","variant","closeModal","menu","closeMenu","errorMsgShown","setErrorMsgShown","errorClassName","setErrorClassName","titleRef","navigate","useNavigate","focus","e","background","data","icon","createBoardThunk","then","action","payload","updateBoardThunk","dataUpdate","defaultValue","autoComplete","maxLength","validateInputMaxLength","setError","setClassName","Plus","SidebarWrapper","aside","SidebarHeader","LogoBlock","Link","BoardBlock","CreateBoardBlock","CreateBoardText","PlusIcon","SidebarBoardsList","LogoutBlock","LogoutLink","LogoutIcon","showSidebar","isAddBoardModalShown","setIsAddBoardModalShown","isEditBoardModalShown","setIsEditBoardModalShown","to","handleLogOut","logOut","BoardModal","TextDiv","TextOnHomePage","HomePageText","Container","MainContainer","HomePage","selectAuthLoading","setShowSidebar","handleResize","innerWidth","closeSidebar","useCallback","escClick","Sidebar","Navigate","Outlet","yup","shape","min","max","matches"],"sourceRoot":""}