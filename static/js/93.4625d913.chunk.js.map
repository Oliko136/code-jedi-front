{"version":3,"file":"static/js/93.4625d913.chunk.js","mappings":"yKAE8BA,EAAAA,GAAOC,EAACC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6PAA/B,MAcMC,EAAcJ,EAAAA,GAAOK,OAAMC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gJ,uBCbxC,MAYA,EAZcI,IAA+B,IAA9B,SAAEC,EAAQ,WAAEC,GAAYF,EACrC,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOH,UACpBI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeH,SAAA,CAE3BA,GACDE,EAAAA,EAAAA,KAAA,UAAQG,QAASJ,EAAWD,SAAC,cAE3B,ECmBV,EA1BoBM,KAClB,MAAMC,EAAeA,QAEdC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,EAAcA,IAAMF,GAAaG,IAAkBA,IAEzD,OACER,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAb,SAAA,EACEI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,gDAC6C,KAC9CE,EAAAA,EAAAA,KAACN,EAAW,CAACS,QAASM,EAAYX,SAAC,sBAA+B,0LAMnEQ,IACCJ,EAAAA,EAAAA,MAACU,EAAK,CAACb,WAAYU,EAAYX,SAAA,EAC7BE,EAAAA,EAAAA,KAACK,EAAY,CAACQ,YAAaJ,KAC3BT,EAAAA,EAAAA,KAAA,KAAGc,MAAM,QAAOhB,SAAC,sBAGpB,C","sources":["pages/ScreensPage/ScreenPage.styled.jsx","components/Modal/ModalKill.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TextOnHomePage = styled.p`\n  // text-align: center;\n  color: rgba(250, 250, 250, 0.5);\n  font-weight: 400;\n  font-size: 10px;\n  padding: 0 20px;\n  max-width: 335px;\n\n  @media only screen and (min-width: 375px) {\n    font-size: 12px;\n    max-width: 486px;\n  }\n`;\n\nexport const CreateBoard = styled.button`\n  color: #bedbb0;\n  transition: text-decoration 450ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","//заглушка Не использовать не использовать не использовать!!!!\nimport React from 'react';\n\nconst Modal = ({ children, closeModal }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        {/* Поки що тут немає контенту, просто рендеримо дітей */}\n        {children}\n        <button onClick={closeModal}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { CreateBoard } from './ScreenPage.styled';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/ModalKill';\n\nconst ScreensPage = () => {\n  const AddBoardForm = () => {};\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n  return (\n    <>\n      <p>\n        Before starting your project, it is essential{' '}\n        <CreateBoard onClick={toggleModal}>to create a board</CreateBoard> to\n        visualize and track all the necessary tasks and milestones. This board\n        serves as a powerful tool to organize the workflow and ensure effective\n        collaboration among team members.\n      </p>\n\n      {showModal && (\n        <Modal closeModal={toggleModal}>\n          <AddBoardForm handleClose={toggleModal} />\n          <p color=\"white\">MODAL WINDOW</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["styled","p","_templateObject","_taggedTemplateLiteral","CreateBoard","button","_templateObject2","_ref","children","closeModal","_jsx","className","_jsxs","onClick","ScreensPage","AddBoardForm","showModal","setShowModal","useState","toggleModal","prevShowModal","_Fragment","Modal","handleClose","color"],"sourceRoot":""}