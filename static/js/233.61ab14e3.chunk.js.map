{"version":3,"file":"static/js/233.61ab14e3.chunk.js","mappings":"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","sources":["components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","components/ButtonClose/ButtonClose.styled.jsx","components/ButtonClose/ButtonClose.jsx","components/RadioButtons/RadioFilter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/MainDashboard/TasksColumn/TasksColumn.styled.jsx","components/MainDashboard/TasksCard/TasksCard.styled.jsx","components/MainDashboard/TasksCard/TasksCard.jsx","components/MainDashboard/TasksColumn/TasksColumn.jsx","components/Modal/ColumnModal/ColumnModal.styled.jsx","components/Modal/ColumnModal/ColumnModal.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.styled.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.jsx","components/MainDashboard/MainDashboard.jsx","pages/ScreensPage/ScreensPage.jsx","redux/boards/boards-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  // position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Add opacity for background */\n  z-index: 9999; /* Ensure it's above other content */\n`;\n\nexport const Modalcont = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n  align-items: center;\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  z-index: 10000; /* Ensure it's above the opacity layer */\n  width: ${({ $Width }) => $Width}px;\n`;\n\n// export const Opacity = styled.div`\n//   position: absolute;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   top: 0;\n//   left: 0;\n//   width: 100vw;\n//   height: 100vh;\n//   background-color: var(--primary-bg-color);\n\n//   @media screen and (max-width: 375px) {\n//     padding: 15px;\n//   }\n// `;\n\n// export const Modalcont = styled.div`\n//   position: absolute;\n//   // width: 100%;\n//   justify-content: center;\n//   align-items: center;\n\n//   min-height: 130px;\n//   border-radius: 8px;\n//   padding: 24px;\n//   color: var(--primary-text-color);\n//   background: var(--input-bg-color);\n//   // height: ${({ $Height }) => $Height}px; /* Use $Height prop */\n//   width: ${({ $Width }) => $Width}px; /* Use $Width prop */\n//   // height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   // width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     // width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     overflow-y: visible;\n//   }\n// `;\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n\n// height: ${({ $Height }) => $Height}; /* Use $Height prop */\n// width: ${({ $Width }) => $Width}; /* Use $Width prop */\n\n// @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   overflow-y: visible;\n// }\n\n//   height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     min-height: ${({ $developers }) => ($developers ? '650px' : 'unset')};\n//     width: ${({ $developers }) => ($developers ? '730px' : '350px')};\n//     width: ${props =>\n//       props.$containerWidth ? `${props.$containerWidth}px` : '350px'};\n//     overflow-y: visible;\n//   }\n// `;\n\n// .modal {\n//   position: fixed;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   padding: 24px;\n\n//   background-color: #161616;\n//   z-index: 900;\n// }\n\n// .ModalClose {\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n//   background-color: white;\n//   padding: 0;\n//   color: #161616;\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\n// import xCloseImg from './x-close.svg';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport Icon from 'components/Icon/Icon';\n\n\nexport const CloseButtonWrapper = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  stroke: var(--icon-color);\n  // transition: stroke 250ms linear;\n\n  &:hover > svg {\n    stroke: #559840;\n  }\n`;\n","import React from 'react';\nimport { CloseButtonWrapper, CloseIcon } from './ButtonClose.styled';\n\nconst ButtonClose = ({ onClick }) => {\n  return (\n    <CloseButtonWrapper onClick={onClick}>\n      <CloseIcon\n        width={18}\n        height={18}\n        fillColor={'none'}\n        strokeColor={`var(--icon-color)`}\n        name={'close'}\n      />\n    </CloseButtonWrapper>\n  );\n};\n\nexport default ButtonClose;\n\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\n\nconst RadioFilter = ({ onFilterChange, priority }) => {\n  const [selectedValue, setSelectedValue] = useState(priority || 'Without');\n  const radio = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor: selectedValue === 'Without' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#DCDCDC',\n        onChecked: '#fff',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor: selectedValue === 'Low' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#0000FF',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor: selectedValue === 'Medium' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#FFC0CB',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor: selectedValue === 'High' ? '#fff' : '#DCDCDC',\n      radioColor: {\n        static: '#008000',\n        onChecked: '#121212',\n      },\n    },\n  ];\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onFilterChange(selectedPriority);\n  };\nconsole.log('Render RadioFilter component');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flexStart',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"radio-buttons-group-label\"\n        value={selectedValue}\n        name=\"radio-buttons-group\"\n        onChange={handleRadioChange}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        {radio.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilter;\n\n//   --datepicker-grey: rgba(255, 255, 255, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n\n// --datepicker-grey-lable: rgba(255, 255, 255, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n\n// --datepicker-checked: #151512;\n// --datepicker-checked: #ffffff;\n// --datepicker-checked: #ffffff;\n\n// --datepicker-focused: #fff;\n// --datepicker-focused: #161616;;\n// --datepicker-focused: #161616;;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 300px;\n  padding: 24px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  //   background: var(--bg-theme);\n  background: #151515;\n  border-radius: 8px;\n  position: relative;\n  color: var(--color);\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: #121212;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color:#fff;\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const LabelTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #121212;\n`;\n\nexport const ShowAllButton = styled.button`\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: #125621;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  transition: color 250ms linear;\n\n  &:hover {\n    color:#555000;\n  }\n`;\n","import React, { useState } from 'react';\nimport ButtonClose from '../ButtonClose/ButtonClose.jsx';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice.js';\n\nimport RadioFilter from '../RadioButtons/RadioFilter.jsx';\nimport {\n  FilterWrapper,\n  Title,\n  Line,\n  TitleWrapper,\n  LabelTitle,\n  ShowAllButton,\n} from './Filter.styled.jsx';\n\nconst Filter = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('all');\n\n  const resetFilter = () => {\n    dispatch(setFilter('all'));\n    setPriority('all');\n  };\n\n  const handleFilterChange = priority => {\n    dispatch(setFilter(priority));\n    setPriority(priority);\n  };\n  console.log('Render Filter component');\n\n  return (\n    <FilterWrapper>\n      <ButtonClose onClick={onClose} />\n      <Title>Filters</Title>\n      <Line />\n      <TitleWrapper>\n        <LabelTitle>Label color</LabelTitle>\n        <ShowAllButton onClick={resetFilter}>Show all</ShowAllButton>\n      </TitleWrapper>\n\n      <RadioFilter onFilterChange={handleFilterChange} priority={priority} />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\n// export const CreatedBoard = styled.div`\n//   padding: 10px;\n// `;\n// export const CreateBoard = styled.button`\n//   color: #bedbb0;\n//   transition: text-decoration 450ms ease-in-out;\n\n//   &:hover,\n//   &:focus {\n//     text-decoration: underline;\n//   }\n// `;\nexport const FilterButton = styled.button`\n  display: flex;\n  width: 64px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  gap: 6px;\n  color: #321212;\n  border: none;\n  background: transparent;\n\n  &:hover {\n    stroke: #bedbb0;\n  }\n`;\nexport const FilterDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 10px; \n`;\n// export const TextDiv = styled.div`\n//   display: flex;\n//   justify-content: center; \n//   align-items: center; \n//   height: 100vh; \n// `;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  // flex-direction: column;\n  // justify-content: flex-end;\n`;","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\n import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\nimport { selectCurrentBoard } from '../../redux/boards/boards-selectors';\nimport {ContainerFilter,\n    FilterDiv,\n    FilterButton,\n} from './HeaderDashboard.styled';\nimport Modal from 'components/Modal/Modal/Modal';\n\nconst HeaderDashboard = () => {\n    const currentBoard = useSelector(selectCurrentBoard);\n    const {title} = currentBoard;\n\n//     const [showModal, setShowModal] = useState(false);\n//    const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n     const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n   const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n   const toggleFilter = () => {\n    setOpenFilter(!openFilter);\n  };\n\n    return(\n      <div>\n        <h4>{title}</h4>\n\n        <ContainerFilter>\n    <FilterDiv>\n        \n       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n        <Icon\n            width={20}\n           height={20}\n            fillColor={'none'}\n            strokeColor={`#fff`}\n             name={'filter'}\n         />\n          <p>Filter</p>\n        </FilterButton>\n      </FilterDiv>\n\n       {openFilter && (\n       <Modal open={openFilter} onClose={toggleFilter}>\n          <Filter onClose={toggleFilter} />\n       </Modal>\n      )}\n\n  \n   </ContainerFilter>\n      </div>\n    )\n}\n\nexport default HeaderDashboard","import styled from 'styled-components';\nexport const DivForColumns = styled.div`\n  display: flex;\n  gap: 28px;\n`;\n\nexport const Column = styled.div`\n  display: block;\n`;\n\nexport const TitleColumnDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: black;\n  border-radius: 8px;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  margin-bottom: 10px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: white;\n    width: 260px;\n  }\n`;\n\nexport const SvgDiv = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Icons = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  opacity: 50%;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;\n\nexport const ButtonForCard = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px 79px;\n  background-color: var(--highPriorityColor);\n  color: black;\n  border-radius: 8px;\n  align-items: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    background-color: #b0eebe;\n  }\n`;\n\nexport const IconDoCard = styled.svg`\n  background-color: black;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: white;\n  padding: 5px 7px 8px 6px;\n`;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 100%;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const CardsColor = styled.div`\n  // тимчасовий колір\n  width: 4px;\n  min-height: 100%;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n\n  background-color: var(--highPriorityColor);\n`;\n\nexport const CardDiv = styled.div`\n  background-color: #121212;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  max-width: 334px;\n  padding: 14px 24px;\n\n  h3 {\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 14px;\n  }\n`;\n\nexport const CardsText = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-bottom: 20px;\n`;\n\nexport const CardsParams = styled.div`\n  display: flex;\n`;\n\nexport const PriorityDiv = styled.div`\n  margin-right: 16px;\n\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const PriorityTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const ColorCard = styled.div`\n  width: 12px;\n  height: 12px;\n\n  // тимчасово\n  background-color: var(--highPriorityColor);\n  border-radius: 50px;\n`;\n\nexport const ColorCardText = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const DeadlineDiv = styled.div`\n  margin-right: 116px;\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const DeadlineTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const SvgContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 24px;\n`;\n\nexport const ParamsButtons = styled.button``;\n\nexport const ButtonsIcon = styled.svg`\n  stroke: #fff;\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;","import {\n    Card,\n    CardsColor,\n    CardDiv,\n    CardsParams,\n    PriorityDiv,\n    PriorityTitle,\n    ColorCard,\n    CardsText,\n    ColorCardText,\n    DeadlineDiv,\n    DeadlineTitle,\n    DeadlineDate,\n    SvgContainer,\n    ParamsButtons,\n    ButtonsIcon,\n  } from './TasksCard.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  \n  const TasksCard = () => {\n    return (\n      <Card>\n        <CardsColor></CardsColor>\n  \n        <CardDiv>\n          <h3>{'Cards title'}</h3>\n          <CardsText>\n            Create a visually stunning and eye-catching watch dial design that\n            embodies our brand's\n          </CardsText>\n          <CardsParams>\n            <PriorityDiv>\n              <PriorityTitle>Priority</PriorityTitle>\n              <div>\n                <ColorCard></ColorCard>\n                <ColorCardText>{'Color'}</ColorCardText>\n              </div>\n            </PriorityDiv>\n  \n            <DeadlineDiv>\n              <DeadlineTitle>Deadline</DeadlineTitle>\n              <DeadlineDate>00/00/0000</DeadlineDate>\n            </DeadlineDiv>\n            <SvgContainer>\n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#broken-right`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#pencil`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#trash`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n            </SvgContainer>\n          </CardsParams>\n        </CardDiv>\n      </Card>\n    );\n  };\n  \n  export default TasksCard;","import {\n    DivForColumns,\n    TitleColumnDiv,\n    Button,\n    Icons,\n    SvgDiv,\n    ButtonForCard,\n    IconDoCard,\n    Column,\n  } from './TasksColumn.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  import TasksCard from '../TasksCard/TasksCard';\n  // import ButtonForColumn from '../ButtonForColumn/ButtonForColumn';\n  \n  const TasksColumn = () => {\n    return (\n      <DivForColumns>\n        <Column>\n          <TitleColumnDiv>\n            <h3>Title for colum</h3>\n            <SvgDiv>\n              <Button>\n                <Icons>\n                  <use href={`${sprite}#pencil`}></use>\n                </Icons>\n              </Button>\n  \n              <Button>\n                <Icons>\n                  <use href={`${sprite}#trash`}></use>\n                </Icons>\n              </Button>\n            </SvgDiv>\n          </TitleColumnDiv>\n  \n          <TasksCard />\n  \n          <ButtonForCard>\n            <IconDoCard>\n              <use href={`${sprite}#plus`}></use>\n            </IconDoCard>\n            Add another card\n          </ButtonForCard>\n        </Column>\n  \n        {/* <ButtonForColumn /> */}\n      </DivForColumns>\n    );\n  };\n  \n  export default TasksColumn;","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input\n    {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\n// import { needhelp } from '../../../redux/needhelp/needhelp-operation.js';\nimport { toast } from 'react-toastify';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n} from './ColumnModal.styled';\nimport Icon from '../../Icon/Icon';\n\n// нужно создавать id колонки?\nconst ColumnModal = ({ showModal }) => {\n  const { boardId } = useParams();\n\n  const [title, setTitle] = useState('');\n//   const dispatch = useDispatch();\n\n  const TOASTER = {\n    style: {\n      border: '2px solid #bedbb0',\n      backgroundColor: '#1f1f1f',\n      color: '#fff',\n      textAlign: 'center',\n    },\n    position: 'top-center',\n    duration: 2000,\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    console.log(title)\n    \nconst newColumn = {\n      board: boardId,\n      title,\n    };\n    console.log(newColumn)\n    try {\n        // создать опер\n    //   dispatch(addColumn(newColumn));\n      toast('You have successfully created a column ✅', TOASTER);\n      showModal(false);\n    } catch (error) {\n      return error.message\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={335} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Add column'}</ModalTitle>\n          <TitleInput\n            value={title}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n          \n          <ButtonSend type=\"submit\">\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'none'}\n                      strokeColor={'var(--icon-plus)'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n            Add\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default ColumnModal;\n","import styled from 'styled-components';\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background-color: var(--btn-add-column);\n  color: var(--icon-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-add-column-wrap);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid red;\n  \n`;\n\nexport const PlusButton = styled.div`\n  // width: 64px;\n  // height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\n// export const AddColumnButton = styled.button`\n//   display: flex;\n//   height: 56px;\n//   padding: 12px 79px;\n//   background-color: black;\n//   color: #fff;\n//   border-radius: 8px;\n//   align-items: center;\n//   gap: 8px;\n//   transition: 350ms ease-in-out;\n//   &:hover {\n//     background-color: #121212;\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   background-color: #fff;\n//   border-radius: 8px;\n//   width: 28px;\n//   height: 28px;\n//   stroke: black;\n//   padding: 5px 7px 8px 6px;\n// `;","// import { AddColumnButton, IconPlus } from './ButtonForColumn.styled';\n// import sprite from '../../../assets/svg/sprite.svg';\nimport ColumnModal from 'components/Modal/ColumnModal/ColumnModal';\nimport { useState } from 'react';\nimport Icon from '../../Icon/Icon';\nimport  {IconWrap, PlusButton, ButtonSend} from './ButtonForColumn.styled'\n\nconst ButtonForColumn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  return (\n    <>\n    {/* <AddColumnButton type=\"button\" onClick={toggleModal}>\n      <IconPlus>\n        <use href={`${sprite}#plus`}></use>\n      </IconPlus>\n      Add another column\n    </AddColumnButton> */}\n     <ButtonSend type=\"submit\" onClick={toggleModal}>\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'red'}\n                      strokeColor={'red'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n                Add another column\n            </PlusButton>\n          </ButtonSend>\n    {showModal && (<ColumnModal showModal={setShowModal} />)}\n    </>\n    \n  );\n};\n\nexport default ButtonForColumn;","// import { useSelector } from 'react-redux';\n// import { selectAuthLoading } from '../../redux/auth/auth-selectors';\n// import { selectBoards } from '../../redux/boards/boards-selectors';\nimport TasksColumn from './TasksColumn/TasksColumn';\n\n\nimport ButtonForColumn from './ButtonForColumn/ButtonForColumn'\n\n// import {useState } from 'react';\n// import Loader from '../Loader/Loader';\n\nconst MainDashboard = () => {\n\n  // const isLoading = useSelector(selectAuthLoading);\n  // const boards = useSelector(selectBoards);\n\n// с div может я переборщила\n    return(\n    // map column  по условию наличия колонок*/}\n      <div>\n        <h1>оыивроаор</h1>\n       \n        <TasksColumn/>\n        <ButtonForColumn/>\n      </div>\n      \n    \n       \n\n \n              \n              \n    \n  )\n}\n\nexport default MainDashboard","// import { FilterButton } from './ScreenPage.styled';\n// import { useState } from 'react';\n// import Modal from '../../components/Modal/FilterModal.jsx';\n// import {  useSelector } from 'react-redux';\n// import Icon from 'components/Icon/Icon';\n// import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\n// import { FilterDiv, ContainerFilter } from './ScreenPage.styled';\nimport HeaderDashboard from 'components/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n\n  return(\n    <>\n    <HeaderDashboard/>\n<MainDashboard/>\n    </>\n \n  )\n\n  // const AddBoardForm = () => {};\n\n  // const [showModal, setShowModal] = useState(false);\n  // const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n  //   const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n  // const handleOpenFilter = () => {\n  //   setOpenFilter(true);\n  // };\n\n  // const toggleFilter = () => {\n  //   setOpenFilter(!openFilter);\n  // };\n\n  // return (\n  //   <ContainerFilter>\n  //     <FilterDiv>\n  //       <div>CreatedBoard</div>\n  //       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n  //         <Icon\n  //           width={20}\n  //           height={20}\n  //           fillColor={'none'}\n  //           strokeColor={`#fff`}\n  //           name={'filter'}\n  //         />\n  //         <p>Filter</p>\n  //       </FilterButton>\n  //     </FilterDiv>\n\n  //     {openFilter && (\n  //       <Modal open={openFilter} onClose={toggleFilter}>\n  //         <Filter onClose={toggleFilter} />\n  //       </Modal>\n  //     )}\n\n  //     {showModal && (\n  //       <Modal closeModal={toggleModal}>\n  //         <AddBoardForm handleClose={toggleModal} />\n  //         <p color=\"white\">MODAL WINDOW</p>\n  //       </Modal>\n  //     )}\n  //   </ContainerFilter>\n  // );\n};\n\nexport default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n"],"names":["Opacity","styled","div","_templateObject","_taggedTemplateLiteral","Modalcont","_templateObject2","_ref","$Width","ModalClose","button","_templateObject3","children","width","height","onClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","_jsx","onClick","_jsxs","$developers","$Height","stopPropagation","type","Icon","strokeColor","name","CloseButtonWrapper","CloseIcon","fillColor","onFilterChange","priority","selectedValue","setSelectedValue","useState","radio","value","label","labelColor","radioColor","static","onChecked","console","log","Box","sx","display","flexDirection","alignItems","RadioGroup","onChange","selectedPriority","target","gap","map","FormControlLabel","margin","fontFamily","fontSize","color","control","Radio","backgroundColor","disableRipple","FilterWrapper","Title","p","Line","hr","TitleWrapper","_templateObject4","LabelTitle","_templateObject5","ShowAllButton","_templateObject6","dispatch","useDispatch","setPriority","ButtonClose","resetFilter","setFilter","RadioFilter","FilterButton","FilterDiv","ContainerFilter","HeaderDashboard","currentBoard","useSelector","selectCurrentBoard","title","openFilter","setOpenFilter","toggleFilter","handleOpenFilter","Modal","open","Filter","DivForColumns","Column","TitleColumnDiv","SvgDiv","Button","Icons","svg","ButtonForCard","_templateObject7","IconDoCard","_templateObject8","Card","CardsColor","CardDiv","CardsText","CardsParams","PriorityDiv","PriorityTitle","ColorCard","ColorCardText","_templateObject9","DeadlineDiv","_templateObject10","DeadlineTitle","_templateObject11","DeadlineDate","_templateObject12","SvgContainer","_templateObject13","ParamsButtons","_templateObject14","ButtonsIcon","_templateObject15","TasksCard","href","concat","sprite","TasksColumn","Modalform","form","ModalTitle","h2","TitleInput","input","ButtonSend","PlusButton","IconWrap","showModal","boardId","useParams","setTitle","TOASTER","style","border","textAlign","position","duration","_Fragment","onSubmit","async","evt","preventDefault","newColumn","board","toast","error","message","required","placeholder","ButtonForColumn","setShowModal","toggleModal","prevShowModal","ColumnModal","MainDashboard","ScreensPage","selectBoards","state","boards","selectIsLoading","isLoading","selectOneBoard","oneBoard"],"sourceRoot":""}