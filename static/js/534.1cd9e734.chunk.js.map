{"version":3,"file":"static/js/534.1cd9e734.chunk.js","mappings":"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","sources":["components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","components/ButtonClose/ButtonClose.styled.jsx","components/ButtonClose/ButtonClose.jsx","components/RadioButtons/RadioFilter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","redux/column/column-selectors.js","components/MainDashboard/TasksColumn/TasksColumn.styled.jsx","components/MainDashboard/TasksCard/TasksCard.styled.jsx","redux/cards/cards-selectors.js","helpers/dateFormat.js","components/MainDashboard/TasksCard/TasksCard.jsx","components/Modal/CardModal/CardModal.styled.jsx","components/Modal/CardModal/CardPriorityList.jsx","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/Modal/CardModal/CardAddModal.jsx","components/MainDashboard/TasksColumn/TasksColumnItem.jsx","components/MainDashboard/TasksColumn/TasksColumn.jsx","components/Modal/ColumnModal/ColumnModal.styled.jsx","components/Modal/ColumnModal/ColumnModal.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.styled.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/MainDashboard/MainDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx","redux/boards/boards-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  // position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Add opacity for background */\n  z-index: 9999; /* Ensure it's above other content */\n`;\n\nexport const Modalcont = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n  align-items: center;\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  z-index: 10000; /* Ensure it's above the opacity layer */\n  width: ${({ $Width }) => $Width}px;\n`;\n\n// export const Opacity = styled.div`\n//   position: absolute;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   top: 0;\n//   left: 0;\n//   width: 100vw;\n//   height: 100vh;\n//   background-color: var(--primary-bg-color);\n\n//   @media screen and (max-width: 375px) {\n//     padding: 15px;\n//   }\n// `;\n\n// export const Modalcont = styled.div`\n//   position: absolute;\n//   // width: 100%;\n//   justify-content: center;\n//   align-items: center;\n\n//   min-height: 130px;\n//   border-radius: 8px;\n//   padding: 24px;\n//   color: var(--primary-text-color);\n//   background: var(--input-bg-color);\n//   // height: ${({ $Height }) => $Height}px; /* Use $Height prop */\n//   width: ${({ $Width }) => $Width}px; /* Use $Width prop */\n//   // height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   // width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     // width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     overflow-y: visible;\n//   }\n// `;\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n\n// height: ${({ $Height }) => $Height}; /* Use $Height prop */\n// width: ${({ $Width }) => $Width}; /* Use $Width prop */\n\n// @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   overflow-y: visible;\n// }\n\n//   height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     min-height: ${({ $developers }) => ($developers ? '650px' : 'unset')};\n//     width: ${({ $developers }) => ($developers ? '730px' : '350px')};\n//     width: ${props =>\n//       props.$containerWidth ? `${props.$containerWidth}px` : '350px'};\n//     overflow-y: visible;\n//   }\n// `;\n\n// .modal {\n//   position: fixed;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   padding: 24px;\n\n//   background-color: #161616;\n//   z-index: 900;\n// }\n\n// .ModalClose {\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n//   background-color: white;\n//   padding: 0;\n//   color: #161616;\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\n// import xCloseImg from './x-close.svg';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport Icon from 'components/Icon/Icon';\n\nexport const CloseButtonWrapper = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  stroke: var(--icon-color);\n  // transition: stroke 250ms linear;\n\n  &:hover > svg {\n    stroke: #559840;\n  }\n`;\n","import React from 'react';\nimport { CloseButtonWrapper, CloseIcon } from './ButtonClose.styled';\n\nconst ButtonClose = ({ onClick }) => {\n  return (\n    <CloseButtonWrapper onClick={onClick}>\n      <CloseIcon\n        width={18}\n        height={18}\n        fillColor={'none'}\n        strokeColor={`var(--icon-color)`}\n        name={'close'}\n      />\n    </CloseButtonWrapper>\n  );\n};\n\nexport default ButtonClose;\n\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\n\nconst RadioFilter = ({ onFilterChange, priority }) => {\n  const [selectedValue, setSelectedValue] = useState(priority || 'Without');\n  const radio = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor:\n        selectedValue === 'Without'\n          ? 'var(--additional-text-color-op)'\n          : 'var(--additional-text-color-op)',\n      radioColor: {\n        static: 'var(--without-filter-lable)',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor: selectedValue === 'Low' ? '#8FA1D0' : '#8FA1D0',\n      radioColor: {\n        static: '#8FA1D0',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor: selectedValue === 'Medium' ? '#E09CB5' : '#E09CB5',\n      radioColor: {\n        static: '#E09CB5',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor: selectedValue === 'High' ? '#BEDBB0' : '#BEDBB0',\n      radioColor: {\n        static: '#BEDBB0',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n  ];\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onFilterChange(selectedPriority);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flexStart',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"radio-buttons-group-label\"\n        value={selectedValue}\n        name=\"radio-buttons-group\"\n        onChange={handleRadioChange}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        {radio.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilter;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 300px;\n  padding: 24px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--bg-theme);\n  // background: #151515;\n  border-radius: 8px;\n  position: relative;\n  // color: var(--color);\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n\n  color:var(--additional-text-color);\n\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color: var(--line-filter);\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const LabelTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color);\n`;\n\nexport const ShowAllButton = styled.button`\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: var(--show-filter-txt);\n  border: none;\n  outline: none;\n  background-color: transparent;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: var(--additional-text-color-op);\n\n  }\n`;\n","import React, { useState } from 'react';\nimport ButtonClose from '../ButtonClose/ButtonClose.jsx';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice.js';\n\nimport RadioFilter from '../RadioButtons/RadioFilter.jsx';\nimport {\n  FilterWrapper,\n  Title,\n  Line,\n  TitleWrapper,\n  LabelTitle,\n  ShowAllButton,\n} from './Filter.styled.jsx';\n\nconst Filter = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('all');\n\n  const resetFilter = () => {\n    dispatch(setFilter('all'));\n    setPriority('all');\n  };\n\n  const handleFilterChange = priority => {\n    dispatch(setFilter(priority));\n    setPriority(priority);\n  };\n  // console.log('Render Filter component');\n\n  return (\n    <FilterWrapper>\n      <ButtonClose onClick={onClose} />\n      <Title>Filters</Title>\n      <Line />\n      <TitleWrapper>\n        <LabelTitle>Label color</LabelTitle>\n        <ShowAllButton onClick={resetFilter}>Show all</ShowAllButton>\n      </TitleWrapper>\n\n      <RadioFilter onFilterChange={handleFilterChange} priority={priority} />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\n// export const CreatedBoard = styled.div`\n//   padding: 10px;\n// `;\n// export const CreateBoard = styled.button`\n//   color: #bedbb0;\n//   transition: text-decoration 450ms ease-in-out;\n\n//   &:hover,\n//   &:focus {\n//     text-decoration: underline;\n//   }\n// `;\n\nexport const ContainerHeaderBoard = styled.div`\ndisplay: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 39px;\n`;\n\nexport const TitleVilter = styled.h4`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: var(--additional-text-color);\n`;\n\nexport const FilterText = styled.h4`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: var(--additional-text-color);\n`;\n\nexport const FilterButton = styled.button`\ndisplay: flex;\ngap:8px;\njustify-content: space-between;\ncursor: pointer;\n\n  &:hover {\n    stroke: #bedbb0;\n  }\n`;\nexport const FilterDiv = styled.div`\n// display: flex;\n// gap:8px;\n// flex-direction: row;\n// justify-content: space-between;\n\n\n  // padding: 10px; \n`;\n// export const TextDiv = styled.div`\n//   display: flex;\n//   justify-content: center; \n//   align-items: center; \n//   height: 100vh; \n// `;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  // flex-direction: column;\n  // justify-content: flex-end;\n`;","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\n import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\nimport { selectCurrentBoard } from '../../redux/boards/boards-selectors';\nimport {ContainerFilter,\n    FilterDiv,\n    FilterButton,\n    TitleVilter,\n    ContainerHeaderBoard,\n    FilterText,\n} from './HeaderDashboard.styled';\nimport Modal from 'components/Modal/Modal/Modal';\n\nconst HeaderDashboard = () => {\n    const currentBoard = useSelector(selectCurrentBoard);\n    const {title} = currentBoard;\n    console.log(title)\n\n     const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n   const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n   const toggleFilter = () => {\n    setOpenFilter(!openFilter);\n  };\n\n    return(\n      <ContainerHeaderBoard>\n        {/* <TitleVilter>{title}</TitleVilter> */}\n        <TitleVilter>title</TitleVilter>\n        <ContainerFilter>\n    <FilterDiv>\n        \n       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n        <Icon\n            width={16}\n           height={16}\n            fillColor={'none'}\n            strokeColor={\"var(--additional-text-color)\"}\n             name={'filter'}\n         />\n          <FilterText>Filters</FilterText>\n        </FilterButton>\n      </FilterDiv>\n\n       {openFilter && (\n       <Modal open={openFilter} onClose={toggleFilter}>\n          <Filter onClose={toggleFilter} />\n       </Modal>\n      )}\n\n  \n   </ContainerFilter>\n      </ContainerHeaderBoard>\n    )\n}\n\nexport default HeaderDashboard","export const selectСolumns = state => state.columns.columns;\nexport const selectCurrentСolumn = state => state.columns.currentСolumns;\nexport const selectIsLoading = state => state.columns.isLoading;\n","import styled from 'styled-components';\n\nexport const DivForColumns = styled.ul`\n  display: flex;\n  gap: 28px;\n`;\n\nexport const Column = styled.li`\n  display: block;\n`;\n\nexport const TitleColumnDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: black;\n  border-radius: 8px;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  margin-bottom: 10px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: white;\n    width: 260px;\n  }\n`;\n\nexport const SvgDiv = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Icons = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  opacity: 50%;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;\n\nexport const ButtonForCard = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px 79px;\n  background-color: var(--highPriorityColor);\n  color: black;\n  border-radius: 8px;\n  align-items: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    background-color: #b0eebe;\n  }\n`;\n\nexport const IconDoCard = styled.svg`\n  background-color: black;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: white;\n  padding: 5px 7px 8px 6px;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 100%;\n  border-radius: 8px;\n  margin-bottom: 8px;\n\n\n  background: var(--btn-add-column);\n\n\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    height: 154px;\n  }\n\n \n`;\n\nexport const TextCard = styled.h4`\nfont-weight: 600;\nfont-size: 14px;\nletter-spacing: -0.02em;\n  color: var(--icon-color);\n  padding-bottom: 8px;\n`;\n\nexport const CardsColor = styled.div`\n  \n  width: 4px;\n  min-height: 100%;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n\n  // background-color: var(--highPriorityColor);\n`;\n\nexport const CardDiv = styled.div`\n  // background-color: #121212;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  max-width: 334px;\n  padding: 14px 24px;\n\n  // h3 {\n  //   font-size: 14px;\n  //   font-weight: 600;\n  //   margin-bottom: 14px;\n  // }\n`;\n\nexport const CardsText = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--cart-text);\n  // border-bottom: 1 px solid var(--stroke-card);\n  margin-bottom: 14px;\n  line-height: 133%;\nletter-spacing: -0.02em;\noverflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  white-space: normal;\n  // width: calc(100% - 20px);\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color: var(--cart-text);\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\n\nexport const CardsParams = styled.div`\n  display: flex;\n`;\n\nexport const PriorityDiv = styled.div`\n  margin-right: 16px;\n\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const PriorityTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: var(--cart-text);\n  letter-spacing: -0.02em;\n  // margin-bottom: 8px;\n  // margin-top: 16px;\n`;\n// тимчасово\nexport const ColorCard = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: var(--highPriorityColor);\n  border-radius: 50px;\n`;\n\nexport const ColorCardText = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: var(--icon-color);\n  letter-spacing: -0.02em;\n`;\n\nexport const DeadlineDiv = styled.div`\n  margin-right: 116px;\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const DeadlineTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: var(--cart-text);\n  // margin-bottom: 8px;\n  // margin-top: 16px;\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: var(--icon-color);\n`;\n\nexport const SvgContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  // padding-top: 24px;\n`;\n\nexport const ParamsButtons = styled.button``;\n\nexport const ButtonsIcon = styled.svg`\n  stroke: var(--cart-text);\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;","export const selectCards = state => state.cards.cards;\nexport const selectError = state => state.cards.error;\nexport const selectIsLoading = state => state.cards.isLoading;","export function formatDate(inputDate) {\n    // Разбиваем строку даты по разделителю \"-\"\n   const parts = inputDate.split(\"-\");\n    // Формируем новую дату в формате \"дд/мм/гггг\"\n   const formatedDate = parts[2] + \"/\" + parts[1] + \"/\" + parts[0];\n    \n    return formatedDate;\n}\nexport function formatCurrentDate(date) {\n   const year = date.getFullYear();\n    // Получаем месяц и добавляем 1, так как в JavaScript месяцы нумеруются с 0\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    \n    const day = date.getDate().toString().padStart(2, '0');\n    \n    return year + \"-\" + month + \"-\" + day;\n}","import {\n    Card,\n    CardsColor,\n    CardDiv,\n    CardsParams,\n    PriorityDiv,\n    PriorityTitle,\n    ColorCard,\n    CardsText,\n    ColorCardText,\n    DeadlineDiv,\n    DeadlineTitle,\n    DeadlineDate,\n    SvgContainer,\n    ParamsButtons,\n    ButtonsIcon,\n    TextCard,\n    Line\n  } from './TasksCard.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  import { selectCards } from '../../../redux/cards/cards-selectors';\n  import { useSelector } from 'react-redux';\n  // import { PRIORITY_LIST} from '../../../constants/index'\n  import {formatDate, formatCurrentDate} from '../../../helpers/dateFormat'\n  // import React, {  useEffect, useState } from 'react';\n  \n  const TasksCard = () => {\n    const currentDate = new Date();\n    const card = useSelector(selectCards)\n   \nconst {title, description, priority, deadline = \"2024-05-13\"} = card;\nconsole.log(title)\n// const priorityColor = PRIORITY_LIST.find(item => item.priority === priority)?.color || 'rgba(255, 255, 255, 0.3)';\nconst priorityColor = 'red'\n\nconsole.log(currentDate)\n// const newFormatDeadline = formatDate(deadline)\n// const newFormatDeadline = formatDate(deadline) \nconsole.log('qwe')\n\nconst formatCurrenDate = formatCurrentDate(currentDate)\n\nconsole.log(formatCurrenDate)\n\n\n\n// const currentDate = new Date().toISOString().slice(0, 10);\n\n    return (\n      <Card>\n        <CardsColor style={{ backgroundColor: priorityColor }}></CardsColor>\n  \n        <CardDiv>\n          <TextCard>{title}</TextCard>\n          <CardsText>{description}</CardsText>\n          {/* <CardsText>bskjhdksdlsx., cmx cnhedhjadjka  SSDFGHHJUgredffgghhhtrddvvjjuytrsdsfcbhhjhjyrfddxxdvghhytddfhhtrfrfg</CardsText> */}\n          <Line></Line>\n          <CardsParams>\n            <PriorityDiv>\n              <PriorityTitle>Priority</PriorityTitle>\n              <div>\n     \n                <ColorCard style={{ backgroundColor: priorityColor }}></ColorCard>\n\n                <ColorCardText>{priority}</ColorCardText>\n              </div>\n            </PriorityDiv>\n  \n            <DeadlineDiv>\n              <DeadlineTitle>Deadline</DeadlineTitle>\n              <DeadlineDate>{formatDate(deadline)}</DeadlineDate>\n            </DeadlineDiv>\n            <SvgContainer>\n{deadline === formatCurrenDate && (\n  <ParamsButtons>\n  <ButtonsIcon>\n    <use href={`${sprite}#bell`}></use>\n  </ButtonsIcon>\n</ParamsButtons>\n)}\n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#broken-right`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#pencil`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#trash`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n            </SvgContainer>\n          </CardsParams>\n        </CardDiv>\n      </Card>\n    );\n  };\n  \n  export default TasksCard;","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n  @media screen and (min-width: 1440px) {\n    input {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 14px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 154px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  font-family: inherit;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 4px;\n`;\n\nexport const Label = styled.label`\n  width: 14px;\n  height: 14px;\n  border-radius: 100%;\n`;\n\nexport const PriorityDiv = styled.div`\n  display: flex;\n  margin-bottom: 14px;\n  gap: 8px;\n`;\n\nexport const InputRadio = styled.input`\n  display: none;\n  cursor: pointer;\n  &:checked + svg use {\n    stroke-opacity: 1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  letter-spacing: -0.02em;\n  color: var(--btn-text-color);\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import Icon from 'components/Icon/Icon';\nimport { Label, InputRadio, PriorityDiv } from './CardModal.styled';\n\nconst CardPriorityList = ({ value, onChange }) => {\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n\n  const PRIORITY_LIST = [\n    { priority: 'low', color: '#8FA1D0' },\n    { priority: 'medium', color: '#E09CB5' },\n    { priority: 'high', color: '#BEDBB0' },\n    { priority: 'without', color: 'rgba(255, 255, 255, 0.3)' },\n  ];\n\n  return (\n    <PriorityDiv>\n      {PRIORITY_LIST.map(({ priority, color }) => (\n        <Label key={priority}>\n          <InputRadio\n            type=\"radio\"\n            name=\"color\"\n            value={color}\n            checked={value === color}\n            onChange={handleChange}\n          />\n          <Icon\n            fillColor={color}\n            name={\n              value === color\n                ? 'radio-button-checked'\n                : 'radio-button-unchecked'\n            }\n          />\n        </Label>\n      ))}\n    </PriorityDiv>\n  );\n};\n\nexport default CardPriorityList;\n","import styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 4px;\n  align-items: flex-end;\n  justify-content: center;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-weight: 500;\n  /* font-size: 14px; */\n  letter-spacing: -0.02em;\n  color: var(--additional-btn-bg-color);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: var(--accent-icon-hover-color);\n  }\n`;\n\nexport const ButtonSvg = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: currentColor;\n`;\n\nexport const StyledDatePickerContainer = styled.div`\n  .react-datepicker {\n    font-family: inherit;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    background-color: var(--calendar-bg-color);\n    border: 1px solid var(--additional-icon-color);\n    border-radius: 8px;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker-popper > svg {\n    display: none;\n  }\n\n  .react-datepicker-popper {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .react-datepicker__month-container {\n    position: absolute;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker__header {\n    border: none;\n    background-color: transparent;\n    padding: 0;\n  }\n\n  .react-datepicker__month {\n    margin: 0;\n    margin-top: 11px;\n  }\n\n  .react-datepicker__current-month {\n    padding-bottom: 14px;\n    font-weight: 500;\n    font-size: 16px;\n    letter-spacing: -0.02em;\n    color: var(--btn-icon-color);\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n    gap: 12px;\n    border-top: 1px solid var(--calendar-additional-color-trans);\n    padding-top: 14px;\n  }\n\n  .react-datepicker__day-name {\n    display: inline-flex;\n    color: var(--calendar-text-color-trans);\n    font-family: 'Poppins', sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    margin: 0;\n    width: 100%;\n  }\n\n  .react-datepicker__day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    width: 22px;\n    height: 22px;\n    margin: 0;\n    border-radius: 50%;\n    color: var(--btn-icon-color);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day:focus {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n  }\n\n  .react-datepicker__day--disabled {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--today {\n    border-radius: 50%;\n    text-align: center;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__week {\n    display: flex;\n  }\n\n  .react-datepicker__week > * {\n    flex: 1;\n    margin-right: 8px;\n  }\n\n  .react-datepicker__week > *:last-child {\n    margin-right: 0;\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: transparent;\n  }\n\n  .react-datepicker__navigation {\n    cursor: pointer;\n    position: absolute;\n    top: 10px;\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-icon-color);\n    border-style: solid;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-text-color-op);\n  }\n`;\n","import Icon from 'components/Icon/Icon';\nimport DatePicker from 'react-datepicker';\nimport * as Styled from './Calendar.styled';\nimport { forwardRef } from 'react';\n\nconst Calendar = ({ date, changeDate }) => {\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <Styled.Button type=\"button\" onClick={onClick} ref={ref}>\n      {value}\n      <Styled.ButtonSvg>\n        <Icon name=\"chevron-down\" />\n      </Styled.ButtonSvg>\n    </Styled.Button>\n  ));\n\n  const dateFormatChange = date => {\n    if (!(date instanceof Date)) {\n      return 'MMMM dd, yyyy';\n    }\n    const today = new Date();\n    if (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    ) {\n      return \"'Today', MMMM dd\";\n    } else {\n      return 'EEEE, MMMM dd';\n    }\n  };\n\n  return (\n    <Styled.StyledDatePickerContainer>\n      <DatePicker\n        className=\"datePicker\"\n        selected={date}\n        onChange={changeDate}\n        minDate={new Date()}\n        dateFormat={dateFormatChange(date)}\n        customInput={<CustomInput />}\n      />\n    </Styled.StyledDatePickerContainer>\n  );\n};\n\nexport default Calendar;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { toast } from 'react-toastify';\nimport Modal from '../Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport CardPriorityList from './CardPriorityList';\nimport Calendar from 'components/Calendar/Calendar';\nimport { addCardThunk } from '../../../redux/cards/cards-operations';\nimport {\n  ButtonSend,\n  IconWrap,\n  ModalTitle,\n  Modalform,\n  PlusButton,\n  Text,\n  Textarea,\n  TitleInput,\n} from './CardModal.styled';\n\nconst CardAddModal = ({ showModal }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cardPriority, setCardPriority] = useState('without');\n  const [deadline, setDeadline] = useState(new Date());\n\n  // const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const changeDeadline = date => {\n    setDeadline(date);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      title: title.trim(),\n      description: description.trim(),\n      cardPriority,\n      deadline,\n    };\n\n    dispatch(addCardThunk(data));\n  };\n\n  return (\n    <Modal width={335} height={522} onClose={() => showModal(false)}>\n      <Modalform onSubmit={handleSubmit}>\n        <ModalTitle>{'Add card'}</ModalTitle>\n        <TitleInput\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n        />\n        <Textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <Text>{'Label color'}</Text>\n        <CardPriorityList value={cardPriority} onChange={setCardPriority} />\n        <Text>{'Deadline'}</Text>\n        <Calendar date={deadline} changeDate={changeDeadline} />\n        <ButtonSend type=\"submit\">\n          <PlusButton>\n            <IconWrap>\n              <Icon\n                width={14}\n                height={14}\n                fillColor={'none'}\n                strokeColor={'var(--icon-plus)'}\n                name={'icon-plus'}\n              />\n            </IconWrap>\n            Add\n          </PlusButton>\n        </ButtonSend>\n      </Modalform>\n    </Modal>\n  );\n};\n\nexport default CardAddModal;\n","import { useDispatch } from 'react-redux';\nimport {\n  deleteColumnThunk,\n  updateColumnThunk,\n} from '../../../redux/column/column-operations.js';\nimport sprite from '../../../assets/svg/sprite.svg';\nimport TasksCard from '../TasksCard/TasksCard.jsx';\nimport {\n  TitleColumnDiv,\n  Button,\n  Icons,\n  SvgDiv,\n  ButtonForCard,\n  IconDoCard,\n  Column,\n} from './TasksColumn.styled.jsx';\n\nimport { useState } from 'react';\nimport CardAddModal from 'components/Modal/CardModal/CardAddModal.jsx';\n\nconst TasksColumnItem = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n  const { _id, title } = column;\n\n  const dispatch = useDispatch();\n\n  const onUpdateColumn = () => {\n    dispatch(updateColumnThunk(_id));\n  };\n\n  const onDeleteColumn = () => {\n    dispatch(deleteColumnThunk(_id));\n  };\n\n  return (\n    <>\n      <Column id={_id}>\n        <TitleColumnDiv>\n          <h3>{title}</h3>\n          <SvgDiv>\n            <Button>\n              <Icons onClick={onUpdateColumn}>\n                <use href={`${sprite}#pencil`}></use>\n              </Icons>\n            </Button>\n\n            <Button>\n              <Icons onClick={onDeleteColumn}>\n                <use href={`${sprite}#trash`}></use>\n              </Icons>\n            </Button>\n          </SvgDiv>\n        </TitleColumnDiv>\n\n        <TasksCard />\n\n        <ButtonForCard onClick={toggleModal}>\n          <IconDoCard>\n            <use href={`${sprite}#plus`}></use>\n          </IconDoCard>\n          Add another card\n        </ButtonForCard>\n      </Column>\n      {showModal && <CardAddModal showModal={setShowModal} />}\n    </>\n  );\n};\n\nexport default TasksColumnItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectСolumns } from '../../../redux/column/column-selectors.js';\nimport { DivForColumns } from './TasksColumn.styled.jsx';\nimport TasksColumnItem from './TasksColumnItem.jsx';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { getAllColumnsThunk } from '../../../redux/column/column-operations.js';\nimport { useEffect } from 'react';\n\nconst TasksColumn = () => {\n  const columns = useSelector(selectСolumns);\n  const board = useSelector(selectCurrentBoard);\n\n  const { _id } = board;\n  console.log('_id :>> ', _id);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllColumnsThunk(_id));\n  }, [_id, dispatch]);\n\n  return (\n    <DivForColumns>\n      {columns.length > 0 &&\n        columns.map(column => (\n          <TasksColumnItem key={column._id} column={column} />\n        ))}\n    </DivForColumns>\n  );\n};\n\nexport default TasksColumn;\n","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input\n    {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\nimport { toast } from 'react-toastify';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n} from './ColumnModal.styled';\nimport Icon from '../../Icon/Icon';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { addColumnThunk } from '../../../redux/column/column-operations';\n\nconst ColumnModal = ({ showModal }) => {\n  const { _id } = useSelector(selectCurrentBoard);\n  console.log('_id :>> ', _id);\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  const TOASTER = {\n    style: {\n      border: '2px solid #bedbb0',\n      backgroundColor: '#1f1f1f',\n      color: '#fff',\n      textAlign: 'center',\n    },\n    position: 'top-center',\n    duration: 2000,\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    console.log(title);\n\n    const newColumn = {\n      title,\n    };\n\n    console.log(newColumn);\n    try {\n      dispatch(addColumnThunk({ boardId: _id, body: newColumn }));\n      toast('You have successfully created a column ✅', TOASTER);\n      showModal(false);\n    } catch (error) {\n      return error.message;\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={335} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Add column'}</ModalTitle>\n          <TitleInput\n            value={title}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n\n          <ButtonSend type=\"submit\">\n            <PlusButton>\n              <IconWrap>\n                <Icon\n                  width={14}\n                  height={14}\n                  fillColor={'none'}\n                  strokeColor={'var(--icon-plus)'}\n                  name={'icon-plus'}\n                />\n              </IconWrap>\n              Add\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default ColumnModal;\n","import styled from 'styled-components';\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background-color: var(--btn-add-column);\n  color: var(--icon-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-add-column-wrap);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // border: 1px solid red;\n  \n`;\n\nexport const PlusButton = styled.div`\n  // width: 64px;\n  // height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\n// export const AddColumnButton = styled.button`\n//   display: flex;\n//   height: 56px;\n//   padding: 12px 79px;\n//   background-color: black;\n//   color: #fff;\n//   border-radius: 8px;\n//   align-items: center;\n//   gap: 8px;\n//   transition: 350ms ease-in-out;\n//   &:hover {\n//     background-color: #121212;\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   background-color: #fff;\n//   border-radius: 8px;\n//   width: 28px;\n//   height: 28px;\n//   stroke: black;\n//   padding: 5px 7px 8px 6px;\n// `;","// import { AddColumnButton, IconPlus } from './ButtonForColumn.styled';\n// import sprite from '../../../assets/svg/sprite.svg';\nimport ColumnModal from 'components/Modal/ColumnModal/ColumnModal';\nimport { useState } from 'react';\nimport Icon from '../../Icon/Icon';\nimport  {IconWrap, PlusButton, ButtonSend} from './ButtonForColumn.styled'\n\nconst ButtonForColumn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  return (\n    <>\n    {/* <AddColumnButton type=\"button\" onClick={toggleModal}>\n      <IconPlus>\n        <use href={`${sprite}#plus`}></use>\n      </IconPlus>\n      Add another column\n    </AddColumnButton> */}\n     <ButtonSend type=\"submit\" onClick={toggleModal}>\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'none'}\n                      strokeColor={'var( --btn-add-column'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n                Add another column\n            </PlusButton>\n          </ButtonSend>\n    {showModal && (<ColumnModal showModal={setShowModal} />)}\n    </>\n    \n  );\n};\n\nexport default ButtonForColumn;","import styled from 'styled-components';\n\nexport const ContainerMainBoard = styled.div`\ndisplay: flex;\ngap: 18px;\n\n`;","\nimport TasksColumn from './TasksColumn/TasksColumn';\nimport ButtonForColumn from './ButtonForColumn/ButtonForColumn';\nimport { ContainerMainBoard } from './MainDashboard.styled';\n\n\n\n// import Loader from '../Loader/Loader';\n\nconst MainDashboard = () => {\n  // const isLoading = useSelector(selectAuthLoading);\n  \n\n  return (\n    <ContainerMainBoard>\n      <TasksColumn />\n      <ButtonForColumn />\n\n    </ContainerMainBoard>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const ContainerScreensPage = styled.div`\n  padding: 14px 20px 60px 14px;\n  background:(var--primary-bg-color);\n`;\n","\nimport HeaderDashboard from 'components/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\nimport {ContainerScreensPage} from './ScreenPage.styled'\n\nconst ScreensPage = () => {\n\n  return(\n    <ContainerScreensPage>\n      <HeaderDashboard/>\n      <MainDashboard/>\n    </ContainerScreensPage>\n \n  )\n};\n\nexport default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n"],"names":["Opacity","styled","div","_templateObject","_taggedTemplateLiteral","Modalcont","_templateObject2","_ref","$Width","ModalClose","button","_templateObject3","children","width","height","onClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","_jsx","onClick","_jsxs","$developers","$Height","stopPropagation","type","Icon","strokeColor","name","CloseButtonWrapper","CloseIcon","fillColor","onFilterChange","priority","selectedValue","setSelectedValue","useState","radio","value","label","labelColor","radioColor","static","onChecked","Box","sx","display","flexDirection","alignItems","RadioGroup","onChange","selectedPriority","target","gap","map","FormControlLabel","margin","fontFamily","fontSize","color","control","Radio","backgroundColor","disableRipple","FilterWrapper","Title","p","Line","hr","TitleWrapper","_templateObject4","LabelTitle","_templateObject5","ShowAllButton","_templateObject6","dispatch","useDispatch","setPriority","ButtonClose","resetFilter","setFilter","RadioFilter","ContainerHeaderBoard","TitleVilter","h4","FilterText","FilterButton","FilterDiv","ContainerFilter","HeaderDashboard","currentBoard","useSelector","selectCurrentBoard","title","console","log","openFilter","setOpenFilter","toggleFilter","handleOpenFilter","Modal","open","Filter","selectСolumns","state","columns","DivForColumns","ul","Column","li","TitleColumnDiv","SvgDiv","Button","Icons","svg","ButtonForCard","_templateObject7","IconDoCard","_templateObject8","Card","TextCard","CardsColor","CardDiv","CardsText","CardsParams","PriorityDiv","PriorityTitle","_templateObject9","ColorCard","_templateObject10","ColorCardText","_templateObject11","DeadlineDiv","_templateObject12","DeadlineTitle","_templateObject13","DeadlineDate","_templateObject14","SvgContainer","_templateObject15","ParamsButtons","_templateObject16","ButtonsIcon","_templateObject17","selectCards","cards","formatDate","inputDate","parts","split","TasksCard","currentDate","Date","card","description","deadline","formatCurrenDate","date","getFullYear","getMonth","toString","padStart","getDate","style","href","concat","sprite","Modalform","form","ModalTitle","h2","TitleInput","input","Textarea","textarea","Text","Label","InputRadio","ButtonSend","PlusButton","IconWrap","handleChange","e","_ref2","checked","ButtonSvg","StyledDatePickerContainer","changeDate","CustomInput","forwardRef","ref","Styled","DatePicker","className","selected","minDate","dateFormat","today","dateFormatChange","customInput","showModal","setTitle","setDescription","cardPriority","setCardPriority","setDeadline","onSubmit","preventDefault","data","trim","addCardThunk","required","placeholder","CardPriorityList","Calendar","column","setShowModal","_id","_Fragment","id","onUpdateColumn","updateColumnThunk","onDeleteColumn","deleteColumnThunk","toggleModal","prevShowModal","CardAddModal","TasksColumn","board","getAllColumnsThunk","length","TasksColumnItem","TOASTER","border","textAlign","position","duration","async","evt","newColumn","addColumnThunk","boardId","body","toast","error","message","ButtonForColumn","ColumnModal","ContainerMainBoard","MainDashboard","ContainerScreensPage","ScreensPage","selectBoards","boards","selectIsLoading","isLoading","selectOneBoard","oneBoard"],"sourceRoot":""}