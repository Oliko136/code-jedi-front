{"version":3,"file":"static/js/677.83564831.chunk.js","mappings":"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","sources":["components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","components/ButtonClose/ButtonClose.styled.jsx","components/ButtonClose/ButtonClose.jsx","components/RadioButtons/RadioFilter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","redux/column/column-selectors.js","components/MainDashboard/TasksColumn/TasksColumn.styled.jsx","components/MainDashboard/TasksCard/TasksCard.styled.jsx","components/MainDashboard/TasksCard/TasksCard.jsx","components/Modal/CardModal/CardModal.styled.jsx","components/Modal/CardModal/CardPriorityList.jsx","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/Modal/CardModal/CardAddModal.jsx","components/MainDashboard/TasksColumn/TasksColumnItem.jsx","components/MainDashboard/TasksColumn/TasksColumn.jsx","components/Modal/ColumnModal/ColumnModal.styled.jsx","components/Modal/ColumnModal/ColumnModal.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.styled.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/MainDashboard/MainDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx","redux/boards/boards-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  // position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Add opacity for background */\n  z-index: 9999; /* Ensure it's above other content */\n`;\n\nexport const Modalcont = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n  align-items: center;\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  z-index: 10000; /* Ensure it's above the opacity layer */\n  width: ${({ $Width }) => $Width}px;\n`;\n\n// export const Opacity = styled.div`\n//   position: absolute;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   top: 0;\n//   left: 0;\n//   width: 100vw;\n//   height: 100vh;\n//   background-color: var(--primary-bg-color);\n\n//   @media screen and (max-width: 375px) {\n//     padding: 15px;\n//   }\n// `;\n\n// export const Modalcont = styled.div`\n//   position: absolute;\n//   // width: 100%;\n//   justify-content: center;\n//   align-items: center;\n\n//   min-height: 130px;\n//   border-radius: 8px;\n//   padding: 24px;\n//   color: var(--primary-text-color);\n//   background: var(--input-bg-color);\n//   // height: ${({ $Height }) => $Height}px; /* Use $Height prop */\n//   width: ${({ $Width }) => $Width}px; /* Use $Width prop */\n//   // height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   // width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     // width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     overflow-y: visible;\n//   }\n// `;\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n\n// height: ${({ $Height }) => $Height}; /* Use $Height prop */\n// width: ${({ $Width }) => $Width}; /* Use $Width prop */\n\n// @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   overflow-y: visible;\n// }\n\n//   height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     min-height: ${({ $developers }) => ($developers ? '650px' : 'unset')};\n//     width: ${({ $developers }) => ($developers ? '730px' : '350px')};\n//     width: ${props =>\n//       props.$containerWidth ? `${props.$containerWidth}px` : '350px'};\n//     overflow-y: visible;\n//   }\n// `;\n\n// .modal {\n//   position: fixed;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   padding: 24px;\n\n//   background-color: #161616;\n//   z-index: 900;\n// }\n\n// .ModalClose {\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n//   background-color: white;\n//   padding: 0;\n//   color: #161616;\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\n// import xCloseImg from './x-close.svg';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport Icon from 'components/Icon/Icon';\n\n\nexport const CloseButtonWrapper = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  stroke: var(--icon-color);\n  // transition: stroke 250ms linear;\n\n  &:hover > svg {\n    stroke: #559840;\n  }\n`;\n","import React from 'react';\nimport { CloseButtonWrapper, CloseIcon } from './ButtonClose.styled';\n\nconst ButtonClose = ({ onClick }) => {\n  return (\n    <CloseButtonWrapper onClick={onClick}>\n      <CloseIcon\n        width={18}\n        height={18}\n        fillColor={'none'}\n        strokeColor={`var(--icon-color)`}\n        name={'close'}\n      />\n    </CloseButtonWrapper>\n  );\n};\n\nexport default ButtonClose;\n\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\n\nconst RadioFilter = ({ onFilterChange, priority }) => {\n  const [selectedValue, setSelectedValue] = useState(priority || 'Without');\n  const radio = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor: selectedValue === 'Without' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#DCDCDC',\n        onChecked: '#fff',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor: selectedValue === 'Low' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#0000FF',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor: selectedValue === 'Medium' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#FFC0CB',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor: selectedValue === 'High' ? '#fff' : '#DCDCDC',\n      radioColor: {\n        static: '#008000',\n        onChecked: '#121212',\n      },\n    },\n  ];\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onFilterChange(selectedPriority);\n  };\nconsole.log('Render RadioFilter component');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flexStart',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"radio-buttons-group-label\"\n        value={selectedValue}\n        name=\"radio-buttons-group\"\n        onChange={handleRadioChange}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        {radio.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilter;\n\n//   --datepicker-grey: rgba(255, 255, 255, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n\n// --datepicker-grey-lable: rgba(255, 255, 255, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n\n// --datepicker-checked: #151512;\n// --datepicker-checked: #ffffff;\n// --datepicker-checked: #ffffff;\n\n// --datepicker-focused: #fff;\n// --datepicker-focused: #161616;;\n// --datepicker-focused: #161616;;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 300px;\n  padding: 24px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  //   background: var(--bg-theme);\n  background: #151515;\n  border-radius: 8px;\n  position: relative;\n  color: var(--color);\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: #121212;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color:#fff;\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const LabelTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #121212;\n`;\n\nexport const ShowAllButton = styled.button`\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: #125621;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  transition: color 250ms linear;\n\n  &:hover {\n    color:#555000;\n  }\n`;\n","import React, { useState } from 'react';\nimport ButtonClose from '../ButtonClose/ButtonClose.jsx';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice.js';\n\nimport RadioFilter from '../RadioButtons/RadioFilter.jsx';\nimport {\n  FilterWrapper,\n  Title,\n  Line,\n  TitleWrapper,\n  LabelTitle,\n  ShowAllButton,\n} from './Filter.styled.jsx';\n\nconst Filter = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('all');\n\n  const resetFilter = () => {\n    dispatch(setFilter('all'));\n    setPriority('all');\n  };\n\n  const handleFilterChange = priority => {\n    dispatch(setFilter(priority));\n    setPriority(priority);\n  };\n  console.log('Render Filter component');\n\n  return (\n    <FilterWrapper>\n      <ButtonClose onClick={onClose} />\n      <Title>Filters</Title>\n      <Line />\n      <TitleWrapper>\n        <LabelTitle>Label color</LabelTitle>\n        <ShowAllButton onClick={resetFilter}>Show all</ShowAllButton>\n      </TitleWrapper>\n\n      <RadioFilter onFilterChange={handleFilterChange} priority={priority} />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\n// export const CreatedBoard = styled.div`\n//   padding: 10px;\n// `;\n// export const CreateBoard = styled.button`\n//   color: #bedbb0;\n//   transition: text-decoration 450ms ease-in-out;\n\n//   &:hover,\n//   &:focus {\n//     text-decoration: underline;\n//   }\n// `;\n\nexport const ContainerHeaderBoard = styled.div`\ndisplay: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 39px;\n`;\n\nexport const TitleVilter = styled.h4`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: var(--additional-text-color);\n`;\n\nexport const FilterText = styled.h4`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: var(--additional-text-color);\n`;\n\nexport const FilterButton = styled.button`\ndisplay: flex;\ngap:8px;\njustify-content: space-between;\ncursor: pointer;\n\n  &:hover {\n    stroke: #bedbb0;\n  }\n`;\nexport const FilterDiv = styled.div`\n// display: flex;\n// gap:8px;\n// flex-direction: row;\n// justify-content: space-between;\n\n\n  // padding: 10px; \n`;\n// export const TextDiv = styled.div`\n//   display: flex;\n//   justify-content: center; \n//   align-items: center; \n//   height: 100vh; \n// `;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  // flex-direction: column;\n  // justify-content: flex-end;\n`;","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\n import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\nimport { selectCurrentBoard } from '../../redux/boards/boards-selectors';\nimport {ContainerFilter,\n    FilterDiv,\n    FilterButton,\n    TitleVilter,\n    ContainerHeaderBoard,\n    FilterText,\n} from './HeaderDashboard.styled';\nimport Modal from 'components/Modal/Modal/Modal';\n\nconst HeaderDashboard = () => {\n    const currentBoard = useSelector(selectCurrentBoard);\n    const {title} = currentBoard;\n    console.log(title)\n\n     const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n   const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n   const toggleFilter = () => {\n    setOpenFilter(!openFilter);\n  };\n\n    return(\n      <ContainerHeaderBoard>\n        {/* <TitleVilter>{title}</TitleVilter> */}\n        <TitleVilter>title</TitleVilter>\n        <ContainerFilter>\n    <FilterDiv>\n        \n       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n        <Icon\n            width={16}\n           height={16}\n            fillColor={'none'}\n            strokeColor={\"var(--additional-text-color)\"}\n             name={'filter'}\n         />\n          <FilterText>Filters</FilterText>\n        </FilterButton>\n      </FilterDiv>\n\n       {openFilter && (\n       <Modal open={openFilter} onClose={toggleFilter}>\n          <Filter onClose={toggleFilter} />\n       </Modal>\n      )}\n\n  \n   </ContainerFilter>\n      </ContainerHeaderBoard>\n    )\n}\n\nexport default HeaderDashboard","export const selectСolumns = state => state.columns.columns;\nexport const selectCurrentСolumn = state => state.columns.currentСolumns;\nexport const selectIsLoading = state => state.columns.isLoading;\n","import styled from 'styled-components';\n\nexport const DivForColumns = styled.ul`\n  display: flex;\n  gap: 28px;\n`;\n\nexport const Column = styled.li`\n  display: block;\n`;\n\nexport const TitleColumnDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: black;\n  border-radius: 8px;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  margin-bottom: 10px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: white;\n    width: 260px;\n  }\n`;\n\nexport const SvgDiv = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Icons = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  opacity: 50%;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;\n\nexport const ButtonForCard = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px 79px;\n  background-color: var(--highPriorityColor);\n  color: black;\n  border-radius: 8px;\n  align-items: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    background-color: #b0eebe;\n  }\n`;\n\nexport const IconDoCard = styled.svg`\n  background-color: black;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: white;\n  padding: 5px 7px 8px 6px;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 100%;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const CardsColor = styled.div`\n  width: 4px;\n  min-height: 100%;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: var(--highPriorityColor); /* temporary color */\n`;\n\nexport const CardDiv = styled.div`\n  background-color: #121212;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  max-width: 334px;\n  padding: 14px 24px;\n\n  h3 {\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 14px;\n  }\n`;\n\nexport const CardsText = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-bottom: 20px;\n`;\n\nexport const CardsParams = styled.div`\n  display: flex;\n`;\n\nexport const PriorityDiv = styled.div`\n  margin-right: 16px;\n\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const PriorityTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const ColorCard = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: var(--highPriorityColor); /* temporary */\n  border-radius: 50px;\n`;\n\nexport const ColorCardText = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const DeadlineDiv = styled.div`\n  margin-right: 116px;\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const DeadlineTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const SvgContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 24px;\n`;\n\nexport const ParamsButtons = styled.button``;\n\nexport const ButtonsIcon = styled.svg`\n  stroke: #fff;\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;","import {\n    Card,\n    CardsColor,\n    CardDiv,\n    CardsParams,\n    PriorityDiv,\n    PriorityTitle,\n    ColorCard,\n    CardsText,\n    ColorCardText,\n    DeadlineDiv,\n    DeadlineTitle,\n    DeadlineDate,\n    SvgContainer,\n    ParamsButtons,\n    ButtonsIcon,\n  } from './TasksCard.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  \n  const TasksCard = () => {\n    return (\n      <Card>\n        <CardsColor></CardsColor>\n  \n        <CardDiv>\n          <h3>{'Cards title'}</h3>\n          <CardsText>\n            Create a visually stunning and eye-catching watch dial design that\n            embodies our brand's\n          </CardsText>\n          <CardsParams>\n            <PriorityDiv>\n              <PriorityTitle>Priority</PriorityTitle>\n              <div>\n                <ColorCard></ColorCard>\n                <ColorCardText>{'Color'}</ColorCardText>\n              </div>\n            </PriorityDiv>\n  \n            <DeadlineDiv>\n              <DeadlineTitle>Deadline</DeadlineTitle>\n              <DeadlineDate>00/00/0000</DeadlineDate>\n            </DeadlineDiv>\n            <SvgContainer>\n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#broken-right`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#pencil`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#trash`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n            </SvgContainer>\n          </CardsParams>\n        </CardDiv>\n      </Card>\n    );\n  };\n  \n  export default TasksCard;","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n  @media screen and (min-width: 1440px) {\n    input {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 14px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 154px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  font-family: inherit;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 4px;\n`;\n\nexport const Label = styled.label`\n  width: 14px;\n  height: 14px;\n  border-radius: 100%;\n`;\n\nexport const PriorityDiv = styled.div`\n  display: flex;\n  margin-bottom: 14px;\n  gap: 8px;\n`;\n\nexport const InputRadio = styled.input`\n  display: none;\n  cursor: pointer;\n  &:checked + svg use {\n    stroke-opacity: 1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  letter-spacing: -0.02em;\n  color: var(--btn-text-color);\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import Icon from 'components/Icon/Icon';\nimport { Label, InputRadio, PriorityDiv } from './CardModal.styled';\n\nconst CardPriorityList = ({ value, onChange }) => {\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n\n  const PRIORITY_LIST = [\n    { priority: 'low', color: '#8FA1D0' },\n    { priority: 'medium', color: '#E09CB5' },\n    { priority: 'high', color: '#BEDBB0' },\n    { priority: 'without', color: 'rgba(255, 255, 255, 0.3)' },\n  ];\n\n  return (\n    <PriorityDiv>\n      {PRIORITY_LIST.map(({ priority, color }) => (\n        <Label key={priority}>\n          <InputRadio\n            type=\"radio\"\n            name=\"color\"\n            value={color}\n            checked={value === color}\n            onChange={handleChange}\n          />\n          <Icon\n            fillColor={color}\n            name={\n              value === color\n                ? 'radio-button-checked'\n                : 'radio-button-unchecked'\n            }\n          />\n        </Label>\n      ))}\n    </PriorityDiv>\n  );\n};\n\nexport default CardPriorityList;\n","import styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 4px;\n  align-items: flex-end;\n  justify-content: center;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-weight: 500;\n  /* font-size: 14px; */\n  letter-spacing: -0.02em;\n  color: var(--additional-btn-bg-color);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: var(--accent-icon-hover-color);\n  }\n`;\n\nexport const ButtonSvg = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: currentColor;\n`;\n\nexport const StyledDatePickerContainer = styled.div`\n  .react-datepicker {\n    font-family: inherit;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    background-color: var(--calendar-bg-color);\n    border: 1px solid var(--additional-icon-color);\n    border-radius: 8px;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker-popper > svg {\n    display: none;\n  }\n\n  .react-datepicker-popper {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .react-datepicker__month-container {\n    position: absolute;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker__header {\n    border: none;\n    background-color: transparent;\n    padding: 0;\n  }\n\n  .react-datepicker__month {\n    margin: 0;\n    margin-top: 11px;\n  }\n\n  .react-datepicker__current-month {\n    padding-bottom: 14px;\n    font-weight: 500;\n    font-size: 16px;\n    letter-spacing: -0.02em;\n    color: var(--btn-icon-color);\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n    gap: 12px;\n    border-top: 1px solid var(--calendar-additional-color-trans);\n    padding-top: 14px;\n  }\n\n  .react-datepicker__day-name {\n    display: inline-flex;\n    color: var(--calendar-text-color-trans);\n    font-family: 'Poppins', sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    margin: 0;\n    width: 100%;\n  }\n\n  .react-datepicker__day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    width: 22px;\n    height: 22px;\n    margin: 0;\n    border-radius: 50%;\n    color: var(--btn-icon-color);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day:focus {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n  }\n\n  .react-datepicker__day--disabled {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--today {\n    border-radius: 50%;\n    text-align: center;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__week {\n    display: flex;\n  }\n\n  .react-datepicker__week > * {\n    flex: 1;\n    margin-right: 8px;\n  }\n\n  .react-datepicker__week > *:last-child {\n    margin-right: 0;\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: transparent;\n  }\n\n  .react-datepicker__navigation {\n    cursor: pointer;\n    position: absolute;\n    top: 10px;\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-icon-color);\n    border-style: solid;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-text-color-op);\n  }\n`;\n","import Icon from 'components/Icon/Icon';\nimport DatePicker from 'react-datepicker';\nimport * as Styled from './Calendar.styled';\nimport { forwardRef } from 'react';\n\nconst Calendar = ({ date, changeDate }) => {\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <Styled.Button type=\"button\" onClick={onClick} ref={ref}>\n      {value}\n      <Styled.ButtonSvg>\n        <Icon name=\"chevron-down\" />\n      </Styled.ButtonSvg>\n    </Styled.Button>\n  ));\n\n  const dateFormatChange = date => {\n    if (!(date instanceof Date)) {\n      return 'MMMM dd, yyyy';\n    }\n    const today = new Date();\n    if (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    ) {\n      return \"'Today', MMMM dd\";\n    } else {\n      return 'EEEE, MMMM dd';\n    }\n  };\n\n  return (\n    <Styled.StyledDatePickerContainer>\n      <DatePicker\n        className=\"datePicker\"\n        selected={date}\n        onChange={changeDate}\n        minDate={new Date()}\n        dateFormat={dateFormatChange(date)}\n        customInput={<CustomInput />}\n      />\n    </Styled.StyledDatePickerContainer>\n  );\n};\n\nexport default Calendar;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { toast } from 'react-toastify';\nimport Modal from '../Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport CardPriorityList from './CardPriorityList';\nimport Calendar from 'components/Calendar/Calendar';\nimport { addCardThunk } from '../../../redux/cards/cards-operations';\nimport {\n  ButtonSend,\n  IconWrap,\n  ModalTitle,\n  Modalform,\n  PlusButton,\n  Text,\n  Textarea,\n  TitleInput,\n} from './CardModal.styled';\n\nconst CardAddModal = ({ showModal }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cardPriority, setCardPriority] = useState('without');\n  const [deadline, setDeadline] = useState(new Date());\n\n  // const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const changeDeadline = date => {\n    setDeadline(date);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      title: title.trim(),\n      description: description.trim(),\n      cardPriority,\n      deadline,\n    };\n\n    dispatch(addCardThunk(data));\n  };\n\n  return (\n    <Modal width={335} height={522} onClose={() => showModal(false)}>\n      <Modalform onSubmit={handleSubmit}>\n        <ModalTitle>{'Add card'}</ModalTitle>\n        <TitleInput\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n        />\n        <Textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <Text>{'Label color'}</Text>\n        <CardPriorityList value={cardPriority} onChange={setCardPriority} />\n        <Text>{'Deadline'}</Text>\n        <Calendar date={deadline} changeDate={changeDeadline} />\n        <ButtonSend type=\"submit\">\n          <PlusButton>\n            <IconWrap>\n              <Icon\n                width={14}\n                height={14}\n                fillColor={'none'}\n                strokeColor={'var(--icon-plus)'}\n                name={'icon-plus'}\n              />\n            </IconWrap>\n            Add\n          </PlusButton>\n        </ButtonSend>\n      </Modalform>\n    </Modal>\n  );\n};\n\nexport default CardAddModal;\n","import { useDispatch } from 'react-redux';\nimport {\n  deleteColumnThunk,\n  updateColumnThunk,\n} from '../../../redux/column/column-operations.js';\nimport sprite from '../../../assets/svg/sprite.svg';\nimport TasksCard from '../TasksCard/TasksCard.jsx';\nimport {\n  TitleColumnDiv,\n  Button,\n  Icons,\n  SvgDiv,\n  ButtonForCard,\n  IconDoCard,\n  Column,\n} from './TasksColumn.styled.jsx';\n\nimport { useState } from 'react';\nimport CardAddModal from 'components/Modal/CardModal/CardAddModal.jsx';\n\nconst TasksColumnItem = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n  const { _id, title } = column;\n\n  const dispatch = useDispatch();\n\n  const onUpdateColumn = () => {\n    dispatch(updateColumnThunk(_id));\n  };\n\n  const onDeleteColumn = () => {\n    dispatch(deleteColumnThunk(_id));\n  };\n\n  return (\n    <>\n      <Column id={_id}>\n        <TitleColumnDiv>\n          <h3>{title}</h3>\n          <SvgDiv>\n            <Button>\n              <Icons onClick={onUpdateColumn}>\n                <use href={`${sprite}#pencil`}></use>\n              </Icons>\n            </Button>\n\n            <Button>\n              <Icons onClick={onDeleteColumn}>\n                <use href={`${sprite}#trash`}></use>\n              </Icons>\n            </Button>\n          </SvgDiv>\n        </TitleColumnDiv>\n\n        <TasksCard />\n\n        <ButtonForCard onClick={toggleModal}>\n          <IconDoCard>\n            <use href={`${sprite}#plus`}></use>\n          </IconDoCard>\n          Add another card\n        </ButtonForCard>\n      </Column>\n      {showModal && <CardAddModal showModal={setShowModal} />}\n    </>\n  );\n};\n\nexport default TasksColumnItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectСolumns } from '../../../redux/column/column-selectors.js';\nimport { DivForColumns } from './TasksColumn.styled.jsx';\nimport TasksColumnItem from './TasksColumnItem.jsx';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { getAllColumnsThunk } from '../../../redux/column/column-operations.js';\nimport { useEffect } from 'react';\n\nconst TasksColumn = () => {\n  const columns = useSelector(selectСolumns);\n  const board = useSelector(selectCurrentBoard);\n\n  const { _id } = board;\n  console.log('_id :>> ', _id);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllColumnsThunk(_id));\n  }, [_id, dispatch]);\n\n  return (\n    <DivForColumns>\n      {columns.length > 0 &&\n        columns.map(column => (\n          <TasksColumnItem key={column._id} column={column} />\n        ))}\n    </DivForColumns>\n  );\n};\n\nexport default TasksColumn;\n","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input\n    {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\nimport { toast } from 'react-toastify';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n} from './ColumnModal.styled';\nimport Icon from '../../Icon/Icon';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { addColumnThunk } from '../../../redux/column/column-operations';\n\nconst ColumnModal = ({ showModal }) => {\n  const { _id } = useSelector(selectCurrentBoard);\n  console.log('_id :>> ', _id);\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  const TOASTER = {\n    style: {\n      border: '2px solid #bedbb0',\n      backgroundColor: '#1f1f1f',\n      color: '#fff',\n      textAlign: 'center',\n    },\n    position: 'top-center',\n    duration: 2000,\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    console.log(title);\n\n    const newColumn = {\n      title,\n    };\n\n    console.log(newColumn);\n    try {\n      dispatch(addColumnThunk({ boardId: _id, body: newColumn }));\n      toast('You have successfully created a column ✅', TOASTER);\n      showModal(false);\n    } catch (error) {\n      return error.message;\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={335} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Add column'}</ModalTitle>\n          <TitleInput\n            value={title}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n\n          <ButtonSend type=\"submit\">\n            <PlusButton>\n              <IconWrap>\n                <Icon\n                  width={14}\n                  height={14}\n                  fillColor={'none'}\n                  strokeColor={'var(--icon-plus)'}\n                  name={'icon-plus'}\n                />\n              </IconWrap>\n              Add\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default ColumnModal;\n","import styled from 'styled-components';\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background-color: var(--btn-add-column);\n  color: var(--icon-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-add-column-wrap);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px s/olid red;\n  \n`;\n\nexport const PlusButton = styled.div`\n  // width: 64px;\n  // height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\n// export const AddColumnButton = styled.button`\n//   display: flex;\n//   height: 56px;\n//   padding: 12px 79px;\n//   background-color: black;\n//   color: #fff;\n//   border-radius: 8px;\n//   align-items: center;\n//   gap: 8px;\n//   transition: 350ms ease-in-out;\n//   &:hover {\n//     background-color: #121212;\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   background-color: #fff;\n//   border-radius: 8px;\n//   width: 28px;\n//   height: 28px;\n//   stroke: black;\n//   padding: 5px 7px 8px 6px;\n// `;","// import { AddColumnButton, IconPlus } from './ButtonForColumn.styled';\n// import sprite from '../../../assets/svg/sprite.svg';\nimport ColumnModal from 'components/Modal/ColumnModal/ColumnModal';\nimport { useState } from 'react';\nimport Icon from '../../Icon/Icon';\nimport  {IconWrap, PlusButton, ButtonSend} from './ButtonForColumn.styled'\n\nconst ButtonForColumn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  return (\n    <>\n    {/* <AddColumnButton type=\"button\" onClick={toggleModal}>\n      <IconPlus>\n        <use href={`${sprite}#plus`}></use>\n      </IconPlus>\n      Add another column\n    </AddColumnButton> */}\n     <ButtonSend type=\"submit\" onClick={toggleModal}>\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'none'}\n                      strokeColor={'var( --btn-add-column'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n                Add another column\n            </PlusButton>\n          </ButtonSend>\n    {showModal && (<ColumnModal showModal={setShowModal} />)}\n    </>\n    \n  );\n};\n\nexport default ButtonForColumn;","import styled from 'styled-components';\n\nexport const ContainerMainBoard = styled.div`\ndisplay: flex;\ngap: 18px;\n\n`;","// import { useSelector } from 'react-redux';\n// import { selectAuthLoading } from '../../redux/auth/auth-selectors';\n// import { selectBoards } from '../../redux/boards/boards-selectors';\nimport TasksColumn from './TasksColumn/TasksColumn';\nimport ButtonForColumn from './ButtonForColumn/ButtonForColumn';\nimport { ContainerMainBoard } from './MainDashboard.styled';\n\n// import {useState } from 'react';\n// import Loader from '../Loader/Loader';\n\nconst MainDashboard = () => {\n  // const isLoading = useSelector(selectAuthLoading);\n  // const boards = useSelector(selectBoards);\n\n  // с div может я переборщила\n  return (\n    // map column  по условию наличия колонок*/}\n    <ContainerMainBoard>\n      <TasksColumn />\n      <ButtonForColumn />\n    </ContainerMainBoard>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const ContainerScreensPage = styled.div`\n  padding: 14px 20px 60px 14px;\n  background:(var--primary-bg-color);\n`;\n","\nimport HeaderDashboard from 'components/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\nimport {ContainerScreensPage} from './ScreenPage.styled'\n\nconst ScreensPage = () => {\n\n  return(\n    <ContainerScreensPage>\n      <HeaderDashboard/>\n      <MainDashboard/>\n    </ContainerScreensPage>\n \n  )\n};\n\nexport default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n"],"names":["Opacity","styled","div","_templateObject","_taggedTemplateLiteral","Modalcont","_templateObject2","_ref","$Width","ModalClose","button","_templateObject3","children","width","height","onClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","_jsx","onClick","_jsxs","$developers","$Height","stopPropagation","type","Icon","strokeColor","name","CloseButtonWrapper","CloseIcon","fillColor","onFilterChange","priority","selectedValue","setSelectedValue","useState","radio","value","label","labelColor","radioColor","static","onChecked","console","log","Box","sx","display","flexDirection","alignItems","RadioGroup","onChange","selectedPriority","target","gap","map","FormControlLabel","margin","fontFamily","fontSize","color","control","Radio","backgroundColor","disableRipple","FilterWrapper","Title","p","Line","hr","TitleWrapper","_templateObject4","LabelTitle","_templateObject5","ShowAllButton","_templateObject6","dispatch","useDispatch","setPriority","ButtonClose","resetFilter","setFilter","RadioFilter","ContainerHeaderBoard","TitleVilter","h4","FilterText","FilterButton","FilterDiv","ContainerFilter","HeaderDashboard","currentBoard","useSelector","selectCurrentBoard","title","openFilter","setOpenFilter","toggleFilter","handleOpenFilter","Modal","open","Filter","selectСolumns","state","columns","DivForColumns","ul","Column","li","TitleColumnDiv","SvgDiv","Button","Icons","svg","ButtonForCard","_templateObject7","IconDoCard","_templateObject8","Card","CardsColor","CardDiv","CardsText","CardsParams","PriorityDiv","PriorityTitle","ColorCard","ColorCardText","_templateObject9","DeadlineDiv","_templateObject10","DeadlineTitle","_templateObject11","DeadlineDate","_templateObject12","SvgContainer","_templateObject13","ParamsButtons","_templateObject14","ButtonsIcon","_templateObject15","TasksCard","href","concat","sprite","Modalform","form","ModalTitle","h2","TitleInput","input","Textarea","textarea","Text","Label","InputRadio","ButtonSend","PlusButton","IconWrap","handleChange","e","_ref2","checked","ButtonSvg","StyledDatePickerContainer","date","changeDate","CustomInput","forwardRef","ref","Styled","DatePicker","className","selected","minDate","Date","dateFormat","today","getDate","getMonth","getFullYear","dateFormatChange","customInput","showModal","setTitle","description","setDescription","cardPriority","setCardPriority","deadline","setDeadline","onSubmit","preventDefault","data","trim","addCardThunk","required","placeholder","CardPriorityList","Calendar","column","setShowModal","_id","_Fragment","id","onUpdateColumn","updateColumnThunk","onDeleteColumn","deleteColumnThunk","toggleModal","prevShowModal","CardAddModal","TasksColumn","board","getAllColumnsThunk","length","TasksColumnItem","TOASTER","style","border","textAlign","position","duration","async","evt","newColumn","addColumnThunk","boardId","body","toast","error","message","ButtonForColumn","ColumnModal","ContainerMainBoard","MainDashboard","ContainerScreensPage","ScreensPage","selectBoards","boards","selectIsLoading","isLoading","selectOneBoard","oneBoard"],"sourceRoot":""}