{"version":3,"file":"static/js/233.9ef31dcc.chunk.js","mappings":"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","sources":["components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","components/ButtonClose/ButtonClose.styled.jsx","components/ButtonClose/ButtonClose.jsx","components/RadioButtons/RadioFilter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/MainDashboard/TasksColumn/TasksColumn.styled.jsx","components/MainDashboard/TasksCard/TasksCard.styled.jsx","components/MainDashboard/TasksCard/TasksCard.jsx","components/Modal/ColumnModal/ColumnModal.styled.jsx","components/Modal/ColumnModal/ColumnModal.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.styled.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.jsx","components/MainDashboard/TasksColumn/TasksColumn.jsx","components/MainDashboard/MainDashboard.jsx","pages/ScreensPage/ScreensPage.jsx","redux/boards/boards-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--primary-bg-color);\n\n  @media screen and (max-width: 375px) {\n    padding: 15px;\n  }\n`;\n\nexport const Modalcont = styled.div`\n  position: relative;\n  // width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  // height: ${({ $Height }) => $Height}px; /* Use $Height prop */\n  width: ${({ $Width }) => $Width}px; /* Use $Width prop */\n  // height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n  // width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n  @media screen and (min-width: 375px) {\n    // width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-y: visible;\n  }\n`;\n// height: ${({ $Height }) => $Height}; /* Use $Height prop */\n// width: ${({ $Width }) => $Width}; /* Use $Width prop */\n\n// @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   overflow-y: visible;\n// }\n\n//   height: ${({ $developers }) => ($developers ? '370px' : 'unset')};\n//   width: ${({ $developers }) => ($developers ? '90%' : '300px')};\n\n//   @media screen and (min-width: 375px) {\n//     width: ${({ $developers }) => ($developers ? '60%' : '335px')};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     min-height: ${({ $developers }) => ($developers ? '650px' : 'unset')};\n//     width: ${({ $developers }) => ($developers ? '730px' : '350px')};\n//     width: ${props =>\n//       props.$containerWidth ? `${props.$containerWidth}px` : '350px'};\n//     overflow-y: visible;\n//   }\n// `;\n\n// .modal {\n//   position: fixed;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 8px;\n//   padding: 24px;\n\n//   background-color: #161616;\n//   z-index: 900;\n// }\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n\n// .ModalClose {\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n//   background-color: white;\n//   padding: 0;\n//   color: #161616;\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\n// import xCloseImg from './x-close.svg';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport Icon from 'components/Icon/Icon';\n\n\nexport const CloseButtonWrapper = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  stroke: var(--icon-color);\n  // transition: stroke 250ms linear;\n\n  &:hover > svg {\n    stroke: #559840;\n  }\n`;\n","import React from 'react';\nimport { CloseButtonWrapper, CloseIcon } from './ButtonClose.styled';\n\nconst ButtonClose = ({ onClick }) => {\n  return (\n    <CloseButtonWrapper onClick={onClick}>\n      <CloseIcon\n        width={18}\n        height={18}\n        fillColor={'none'}\n        strokeColor={`var(--icon-color)`}\n        name={'close'}\n      />\n    </CloseButtonWrapper>\n  );\n};\n\nexport default ButtonClose;\n\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\n\nconst RadioFilter = ({ onFilterChange, priority }) => {\n  const [selectedValue, setSelectedValue] = useState(priority || 'Without');\n  const radio = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor: selectedValue === 'Without' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#DCDCDC',\n        onChecked: '#fff',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor: selectedValue === 'Low' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#0000FF',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor: selectedValue === 'Medium' ? '#fff' : '#808080',\n      radioColor: {\n        static: '#FFC0CB',\n        onChecked: '#121212',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor: selectedValue === 'High' ? '#fff' : '#DCDCDC',\n      radioColor: {\n        static: '#008000',\n        onChecked: '#121212',\n      },\n    },\n  ];\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onFilterChange(selectedPriority);\n  };\nconsole.log('Render RadioFilter component');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flexStart',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"radio-buttons-group-label\"\n        value={selectedValue}\n        name=\"radio-buttons-group\"\n        onChange={handleRadioChange}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        {radio.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilter;\n\n//   --datepicker-grey: rgba(255, 255, 255, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n//   --datepicker-grey: rgba(22, 22, 22, 0.5);\n\n// --datepicker-grey-lable: rgba(255, 255, 255, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n// --datepicker-grey-lable: rgba(22, 22, 22, 0.3);\n\n// --datepicker-checked: #151512;\n// --datepicker-checked: #ffffff;\n// --datepicker-checked: #ffffff;\n\n// --datepicker-focused: #fff;\n// --datepicker-focused: #161616;;\n// --datepicker-focused: #161616;;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 300px;\n  padding: 24px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  //   background: var(--bg-theme);\n  background: #151515;\n  border-radius: 8px;\n  position: relative;\n  color: var(--color);\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: #121212;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color:#fff;\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const LabelTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #121212;\n`;\n\nexport const ShowAllButton = styled.button`\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: #125621;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  transition: color 250ms linear;\n\n  &:hover {\n    color:#555000;\n  }\n`;\n","import React, { useState } from 'react';\nimport ButtonClose from '../ButtonClose/ButtonClose.jsx';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice.js';\n\nimport RadioFilter from '../RadioButtons/RadioFilter.jsx';\nimport {\n  FilterWrapper,\n  Title,\n  Line,\n  TitleWrapper,\n  LabelTitle,\n  ShowAllButton,\n} from './Filter.styled.jsx';\n\nconst Filter = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('all');\n\n  const resetFilter = () => {\n    dispatch(setFilter('all'));\n    setPriority('all');\n  };\n\n  const handleFilterChange = priority => {\n    dispatch(setFilter(priority));\n    setPriority(priority);\n  };\n  console.log('Render Filter component');\n\n  return (\n    <FilterWrapper>\n      <ButtonClose onClick={onClose} />\n      <Title>Filters</Title>\n      <Line />\n      <TitleWrapper>\n        <LabelTitle>Label color</LabelTitle>\n        <ShowAllButton onClick={resetFilter}>Show all</ShowAllButton>\n      </TitleWrapper>\n\n      <RadioFilter onFilterChange={handleFilterChange} priority={priority} />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\n// export const CreatedBoard = styled.div`\n//   padding: 10px;\n// `;\n// export const CreateBoard = styled.button`\n//   color: #bedbb0;\n//   transition: text-decoration 450ms ease-in-out;\n\n//   &:hover,\n//   &:focus {\n//     text-decoration: underline;\n//   }\n// `;\nexport const FilterButton = styled.button`\n  display: flex;\n  width: 64px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  gap: 6px;\n  color: #321212;\n  border: none;\n  background: transparent;\n\n  &:hover {\n    stroke: #bedbb0;\n  }\n`;\nexport const FilterDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  padding: 10px; \n`;\n// export const TextDiv = styled.div`\n//   display: flex;\n//   justify-content: center; \n//   align-items: center; \n//   height: 100vh; \n// `;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  // flex-direction: column;\n  // justify-content: flex-end;\n`;","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\n import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\nimport { selectCurrentBoard } from '../../redux/boards/boards-selectors';\nimport {ContainerFilter,\n    FilterDiv,\n    FilterButton,\n} from './HeaderDashboard.styled';\nimport Modal from 'components/Modal/Modal/Modal';\n\nconst HeaderDashboard = () => {\n    const currentBoard = useSelector(selectCurrentBoard);\n    const {title} = currentBoard;\n\n//     const [showModal, setShowModal] = useState(false);\n//    const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n     const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n   const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n   const toggleFilter = () => {\n    setOpenFilter(!openFilter);\n  };\n\n    return(\n      <div>\n        <h4>{title}</h4>\n\n        <ContainerFilter>\n    <FilterDiv>\n        \n       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n        <Icon\n            width={20}\n           height={20}\n            fillColor={'none'}\n            strokeColor={`#fff`}\n             name={'filter'}\n         />\n          <p>Filter</p>\n        </FilterButton>\n      </FilterDiv>\n\n       {openFilter && (\n       <Modal open={openFilter} onClose={toggleFilter}>\n          <Filter onClose={toggleFilter} />\n       </Modal>\n      )}\n\n  \n   </ContainerFilter>\n      </div>\n    )\n}\n\nexport default HeaderDashboard","import styled from 'styled-components';\nexport const DivForColumns = styled.div`\n  display: flex;\n  gap: 28px;\n`;\n\nexport const Column = styled.div`\n  display: block;\n`;\n\nexport const TitleColumnDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: black;\n  border-radius: 8px;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  margin-bottom: 10px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: white;\n    width: 260px;\n  }\n`;\n\nexport const SvgDiv = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Icons = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  opacity: 50%;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;\n\nexport const ButtonForCard = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px 79px;\n  background-color: var(--highPriorityColor);\n  color: black;\n  border-radius: 8px;\n  align-items: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    background-color: #b0eebe;\n  }\n`;\n\nexport const IconDoCard = styled.svg`\n  background-color: black;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: white;\n  padding: 5px 7px 8px 6px;\n`;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 100%;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const CardsColor = styled.div`\n  // тимчасовий колір\n  width: 4px;\n  min-height: 100%;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n\n  background-color: var(--highPriorityColor);\n`;\n\nexport const CardDiv = styled.div`\n  background-color: #121212;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  max-width: 334px;\n  padding: 14px 24px;\n\n  h3 {\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 14px;\n  }\n`;\n\nexport const CardsText = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-bottom: 20px;\n`;\n\nexport const CardsParams = styled.div`\n  display: flex;\n`;\n\nexport const PriorityDiv = styled.div`\n  margin-right: 16px;\n\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const PriorityTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const ColorCard = styled.div`\n  width: 12px;\n  height: 12px;\n\n  // тимчасово\n  background-color: var(--highPriorityColor);\n  border-radius: 50px;\n`;\n\nexport const ColorCardText = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const DeadlineDiv = styled.div`\n  margin-right: 116px;\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const DeadlineTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n  margin-bottom: 8px;\n  margin-top: 16px;\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const SvgContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 24px;\n`;\n\nexport const ParamsButtons = styled.button``;\n\nexport const ButtonsIcon = styled.svg`\n  stroke: #fff;\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;","import {\n    Card,\n    CardsColor,\n    CardDiv,\n    CardsParams,\n    PriorityDiv,\n    PriorityTitle,\n    ColorCard,\n    CardsText,\n    ColorCardText,\n    DeadlineDiv,\n    DeadlineTitle,\n    DeadlineDate,\n    SvgContainer,\n    ParamsButtons,\n    ButtonsIcon,\n  } from './TasksCard.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  \n  const TasksCard = () => {\n    return (\n      <Card>\n        <CardsColor></CardsColor>\n  \n        <CardDiv>\n          <h3>{'Cards title'}</h3>\n          <CardsText>\n            Create a visually stunning and eye-catching watch dial design that\n            embodies our brand's\n          </CardsText>\n          <CardsParams>\n            <PriorityDiv>\n              <PriorityTitle>Priority</PriorityTitle>\n              <div>\n                <ColorCard></ColorCard>\n                <ColorCardText>{'Color'}</ColorCardText>\n              </div>\n            </PriorityDiv>\n  \n            <DeadlineDiv>\n              <DeadlineTitle>Deadline</DeadlineTitle>\n              <DeadlineDate>00/00/0000</DeadlineDate>\n            </DeadlineDiv>\n            <SvgContainer>\n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#broken-right`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#pencil`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons>\n                <ButtonsIcon>\n                  <use href={`${sprite}#trash`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n            </SvgContainer>\n          </CardsParams>\n        </CardDiv>\n      </Card>\n    );\n  };\n  \n  export default TasksCard;","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input\n    {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\n// import { needhelp } from '../../../redux/needhelp/needhelp-operation.js';\nimport { toast } from 'react-toastify';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n} from './ColumnModal.styled';\nimport Icon from '../../Icon/Icon';\n\n// нужно создавать id колонки?\nconst ColumnModal = ({ showModal }) => {\n  const { boardId } = useParams();\n\n  const [title, setTitle] = useState('');\n//   const dispatch = useDispatch();\n\n  const TOASTER = {\n    style: {\n      border: '2px solid #bedbb0',\n      backgroundColor: '#1f1f1f',\n      color: '#fff',\n      textAlign: 'center',\n    },\n    position: 'top-center',\n    duration: 2000,\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    console.log(title)\n    \nconst newColumn = {\n      board: boardId,\n      title,\n    };\n    console.log(newColumn)\n    try {\n        // создать опер\n    //   dispatch(addColumn(newColumn));\n      toast('You have successfully created a column ✅', TOASTER);\n      showModal(false);\n    } catch (error) {\n      return error.message\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={335} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Add column'}</ModalTitle>\n          <TitleInput\n            value={title}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n          \n          <ButtonSend type=\"submit\">\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'none'}\n                      strokeColor={'var(--icon-plus)'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n            Add\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default ColumnModal;\n","import styled from 'styled-components';\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background-color: var(--btn-add-column);\n  color: var(--icon-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-add-column-wrap);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const PlusButton = styled.div`\n  // width: 64px;\n  // height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\n// export const AddColumnButton = styled.button`\n//   display: flex;\n//   height: 56px;\n//   padding: 12px 79px;\n//   background-color: black;\n//   color: #fff;\n//   border-radius: 8px;\n//   align-items: center;\n//   gap: 8px;\n//   transition: 350ms ease-in-out;\n//   &:hover {\n//     background-color: #121212;\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   background-color: #fff;\n//   border-radius: 8px;\n//   width: 28px;\n//   height: 28px;\n//   stroke: black;\n//   padding: 5px 7px 8px 6px;\n// `;","// import { AddColumnButton, IconPlus } from './ButtonForColumn.styled';\n// import sprite from '../../../assets/svg/sprite.svg';\nimport ColumnModal from 'components/Modal/ColumnModal/ColumnModal';\nimport { useState } from 'react';\nimport Icon from '../../Modal/Modal/Modal';\nimport  {IconWrap, PlusButton, ButtonSend} from './ButtonForColumn.styled'\n\nconst ButtonForColumn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  return (\n    <>\n    {/* <AddColumnButton type=\"button\" onClick={toggleModal}>\n      <IconPlus>\n        <use href={`${sprite}#plus`}></use>\n      </IconPlus>\n      Add another column\n    </AddColumnButton> */}\n     <ButtonSend type=\"submit\" onClick={toggleModal}>\n            <PlusButton>\n                <IconWrap>\n                <Icon width={14}\n                      height={14}\n                      fillColor={'none'}\n                      strokeColor={'var(--btn-add-column)'}\n                      name={\"icon-plus\"}\n                      />\n                </IconWrap>\n            \n                Add another column\n            </PlusButton>\n          </ButtonSend>\n    {showModal && (<ColumnModal showModal={setShowModal} />)}\n    </>\n    \n  );\n};\n\nexport default ButtonForColumn;","import {\n    DivForColumns,\n    TitleColumnDiv,\n    Button,\n    Icons,\n    SvgDiv,\n    ButtonForCard,\n    IconDoCard,\n    Column,\n  } from './TasksColumn.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\n  import TasksCard from '../TasksCard/TasksCard';\n  import ButtonForColumn from '../ButtonForColumn/ButtonForColumn';\n  \n  const TasksColumn = () => {\n    return (\n      <DivForColumns>\n        <Column>\n          <TitleColumnDiv>\n            <h3>Title for colum</h3>\n            <SvgDiv>\n              <Button>\n                <Icons>\n                  <use href={`${sprite}#pencil`}></use>\n                </Icons>\n              </Button>\n  \n              <Button>\n                <Icons>\n                  <use href={`${sprite}#trash`}></use>\n                </Icons>\n              </Button>\n            </SvgDiv>\n          </TitleColumnDiv>\n  \n          <TasksCard />\n  \n          <ButtonForCard>\n            <IconDoCard>\n              <use href={`${sprite}#plus`}></use>\n            </IconDoCard>\n            Add another card\n          </ButtonForCard>\n        </Column>\n  \n        <ButtonForColumn />\n      </DivForColumns>\n    );\n  };\n  \n  export default TasksColumn;","// import { useSelector } from 'react-redux';\n// import { selectAuthLoading } from '../../redux/auth/auth-selectors';\n// import { selectBoards } from '../../redux/boards/boards-selectors';\nimport TasksColumn from './TasksColumn/TasksColumn';\nimport TasksCard from './TasksCard/TasksCard';\nimport ButtonForColumn from './ButtonForColumn/ButtonForColumn'\n\n// import {useState } from 'react';\n// import Loader from '../Loader/Loader';\n\nconst MainDashboard = () => {\n\n  // const isLoading = useSelector(selectAuthLoading);\n  // const boards = useSelector(selectBoards);\n\n// с div может я переборщила\n    return(\n      \n        <div>\n           <div>\n          {/* //  map column  по условию наличия колонок*/}\n          <TasksColumn>\n{/* map card  по условию наличия карточек*/}\n<div>\n<TasksCard/>\n</div>\n          </TasksColumn>\n        </div>\n<ButtonForColumn/>\n        </div>\n       \n\n\n          \n              \n              \n    \n  )\n}\n\nexport default MainDashboard","// import { FilterButton } from './ScreenPage.styled';\n// import { useState } from 'react';\n// import Modal from '../../components/Modal/FilterModal.jsx';\n// import {  useSelector } from 'react-redux';\n// import Icon from 'components/Icon/Icon';\n// import Filter from \"components/Filter/Filter.jsx\";\n// import { getFilter } from 'redux/filter/filter-selectors.js';\n// import { FilterDiv, ContainerFilter } from './ScreenPage.styled';\nimport HeaderDashboard from 'components/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n\n  return(\n    <div>\n      \n<HeaderDashboard/>\n<MainDashboard/>\n    </div>\n  )\n\n  // const AddBoardForm = () => {};\n\n  // const [showModal, setShowModal] = useState(false);\n  // const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n  //   const [openFilter, setOpenFilter] = useState(false);\n  // // const filter = useSelector(getFilter);\n\n  // const handleOpenFilter = () => {\n  //   setOpenFilter(true);\n  // };\n\n  // const toggleFilter = () => {\n  //   setOpenFilter(!openFilter);\n  // };\n\n  // return (\n  //   <ContainerFilter>\n  //     <FilterDiv>\n  //       <div>CreatedBoard</div>\n  //       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n  //         <Icon\n  //           width={20}\n  //           height={20}\n  //           fillColor={'none'}\n  //           strokeColor={`#fff`}\n  //           name={'filter'}\n  //         />\n  //         <p>Filter</p>\n  //       </FilterButton>\n  //     </FilterDiv>\n\n  //     {openFilter && (\n  //       <Modal open={openFilter} onClose={toggleFilter}>\n  //         <Filter onClose={toggleFilter} />\n  //       </Modal>\n  //     )}\n\n  //     {showModal && (\n  //       <Modal closeModal={toggleModal}>\n  //         <AddBoardForm handleClose={toggleModal} />\n  //         <p color=\"white\">MODAL WINDOW</p>\n  //       </Modal>\n  //     )}\n  //   </ContainerFilter>\n  // );\n};\n\nexport default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n"],"names":["Opacity","styled","div","_templateObject","_taggedTemplateLiteral","Modalcont","_templateObject2","_ref","$Height","_ref2","$Width","_ref3","$developers","_ref4","_ref5","ModalClose","button","_templateObject3","children","width","height","onClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","_jsx","onClick","_jsxs","stopPropagation","type","Icon","strokeColor","name","CloseButtonWrapper","CloseIcon","fillColor","onFilterChange","priority","selectedValue","setSelectedValue","useState","radio","value","label","labelColor","radioColor","static","onChecked","console","log","Box","sx","display","flexDirection","alignItems","RadioGroup","onChange","selectedPriority","target","gap","map","FormControlLabel","margin","fontFamily","fontSize","color","control","Radio","backgroundColor","disableRipple","FilterWrapper","Title","p","Line","hr","TitleWrapper","_templateObject4","LabelTitle","_templateObject5","ShowAllButton","_templateObject6","dispatch","useDispatch","setPriority","ButtonClose","resetFilter","setFilter","RadioFilter","FilterButton","FilterDiv","ContainerFilter","HeaderDashboard","currentBoard","useSelector","selectCurrentBoard","title","openFilter","setOpenFilter","toggleFilter","handleOpenFilter","Modal","open","Filter","DivForColumns","Column","TitleColumnDiv","SvgDiv","Button","Icons","svg","ButtonForCard","_templateObject7","IconDoCard","_templateObject8","Card","CardsColor","CardDiv","CardsText","CardsParams","PriorityDiv","PriorityTitle","ColorCard","ColorCardText","_templateObject9","DeadlineDiv","_templateObject10","DeadlineTitle","_templateObject11","DeadlineDate","_templateObject12","SvgContainer","_templateObject13","ParamsButtons","_templateObject14","ButtonsIcon","_templateObject15","TasksCard","href","concat","sprite","Modalform","form","ModalTitle","h2","TitleInput","input","ButtonSend","PlusButton","IconWrap","showModal","boardId","useParams","setTitle","TOASTER","style","border","textAlign","position","duration","_Fragment","onSubmit","async","evt","preventDefault","newColumn","board","toast","error","message","required","placeholder","ButtonForColumn","setShowModal","toggleModal","prevShowModal","ColumnModal","TasksColumn","MainDashboard","ScreensPage","selectBoards","state","boards","selectIsLoading","isLoading","selectOneBoard","oneBoard"],"sourceRoot":""}